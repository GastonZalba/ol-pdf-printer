{"version":3,"file":"ol-pdf-printer.min.js","sources":["../src/components/Helpers.ts","../src/components/MapElements/Legends.tsx","../src/myPragma.ts","../src/components/Pdf.tsx","../node_modules/modal-vanilla/lib/modal.js","../src/classnames.ts","../src/components/ReframeROI.tsx","../src/components/SettingsModal.tsx","../src/components/ProcessingModal.ts","../src/ol-pdf-printer.ts","../src/components/i18n/en.ts","../src/components/i18n/es.ts","../src/defaults.ts","../src/index-umd.ts"],"sourcesContent":["import Map from 'ol/Map.js';\r\nimport { METERS_PER_UNIT } from 'ol/proj/Units.js';\r\nimport ImageWMS from 'ol/source/ImageWMS.js';\r\nimport TileLayer from 'ol/layer/Tile.js';\r\nimport ImageLayer from 'ol/layer/Image.js';\r\nimport BaseLayer from 'ol/layer/Base.js';\r\nimport TileWMS from 'ol/source/TileWMS.js';\r\n\r\n/**\r\n *\r\n * @param map\r\n * @param opt_round\r\n * @returns\r\n * @protected\r\n */\r\nexport const getMapScale = (map: Map, opt_round = true): number => {\r\n    const dpi = 25.4 / 0.28;\r\n\r\n    const view = map.getView();\r\n    const unit = view.getProjection().getUnits();\r\n    const res = view.getResolution();\r\n    const inchesPerMetre = 39.37;\r\n\r\n    let scale = res * METERS_PER_UNIT[unit] * inchesPerMetre * dpi;\r\n\r\n    if (opt_round) {\r\n        scale = Math.round(scale);\r\n    }\r\n\r\n    return scale;\r\n};\r\n\r\n/**\r\n *\r\n * @param layer\r\n * @returns\r\n */\r\nexport const isWmsLayer = (layer: BaseLayer): boolean => {\r\n    return (\r\n        (layer instanceof ImageLayer || layer instanceof TileLayer) &&\r\n        (layer.getSource() instanceof TileWMS ||\r\n            layer.getSource() instanceof ImageWMS)\r\n    );\r\n};\r\n","import View from 'ol/View.js';\r\nimport Map from 'ol/Map.js';\r\nimport BaseLayer from 'ol/layer/Base.js';\r\nimport TileWMS from 'ol/source/TileWMS.js';\r\nimport ImageWMS from 'ol/source/ImageWMS.js';\r\nimport TileLayer from 'ol/layer/Tile.js';\r\nimport ImageLayer from 'ol/layer/Image.js';\r\nimport { appendParams } from 'ol/uri.js';\r\nimport { Projection } from 'ol/proj.js';\r\n\r\nimport { isWmsLayer } from '../Helpers';\r\n\r\nexport const legendsDefaultConfig = {\r\n    legendOptions: {\r\n        fontAntiAliasing: 'true',\r\n        fontColor: '0x000000',\r\n        bgColor: '0xffffff',\r\n        forceLabels: 'on',\r\n        forceTitles: 'on',\r\n        fontSize: 8\r\n    },\r\n    requestParams: {},\r\n    order: true\r\n};\r\n\r\nexport interface LegendsOptions {\r\n    /**\r\n     * To control legend appearance\r\n     * https://docs.geoserver.org/latest/en/user/services/wms/get_legend_graphic/index.html#controlling-legend-appearance-with-legend-options\r\n     */\r\n    legendOptions?: { [key: string]: string | number };\r\n\r\n    /**\r\n     * Extra params to add/overwrite the default `GetLegendGraphic` request\r\n     * https://docs.geoserver.org/latest/en/user/services/wms/get_legend_graphic/index.html#getlegendgraphic\r\n     */\r\n    requestParams?: { [key: string]: string };\r\n\r\n    /**\r\n     * Order control legends by layer zindex\r\n     * Default is `true`\r\n     */\r\n    order?: boolean;\r\n}\r\n\r\nexport default class Legends {\r\n    private _map: Map;\r\n    private _view: View;\r\n\r\n    private _legendOptions: { [key: string]: string | number } = {};\r\n    private _requestParams: { [key: string]: string } = {};\r\n\r\n    private _order: boolean;\r\n\r\n    constructor(options: LegendsOptions | true, map: Map) {\r\n        this._map = map;\r\n        this._view = map.getView();\r\n\r\n        this._legendOptions = legendsDefaultConfig.legendOptions;\r\n        this._requestParams = legendsDefaultConfig.requestParams;\r\n        this._order = legendsDefaultConfig.order;\r\n\r\n        if (typeof options === 'object') {\r\n            const { legendOptions, requestParams, order } = options;\r\n            this._legendOptions = {\r\n                ...this._legendOptions,\r\n                ...(legendOptions || {})\r\n            };\r\n            this._requestParams = {\r\n                ...this._requestParams,\r\n                ...(requestParams || {})\r\n            };\r\n            this._order = typeof order !== 'undefined' ? order : this._order;\r\n        }\r\n    }\r\n\r\n    public async getImages(\r\n        dpi: number,\r\n        txcolor: string,\r\n        bkcolor: string\r\n    ): Promise<HTMLImageElement[]> {\r\n        const images: HTMLImageElement[] = [];\r\n        const wmsLayers = this.getWmsLegendLayers();\r\n        this._legendOptions = {\r\n            ...this._legendOptions,\r\n            dpi,\r\n            fontColor: '0x' + txcolor.replace('#', ''),\r\n            bgColor: '0x' + bkcolor.replace('#', '')\r\n        };\r\n\r\n        for (const wmsLayer of wmsLayers) {\r\n            const image = await this._getLegends(wmsLayer);\r\n            if (image) {\r\n                images.push(image);\r\n            }\r\n        }\r\n\r\n        if (this._order && images.length) {\r\n            return this._orderImagesByIndex(images);\r\n        }\r\n\r\n        return images;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    public getWmsLegendLayers(): Array<\r\n        TileLayer<TileWMS> | ImageLayer<ImageWMS>\r\n    > {\r\n        return this._map\r\n            .getLayers()\r\n            .getArray()\r\n            .filter(\r\n                (layer) => isWmsLayer(layer) && layer.getVisible()\r\n            ) as Array<TileLayer<TileWMS> | ImageLayer<ImageWMS>>;\r\n    }\r\n\r\n    public getMapProjection(): Projection {\r\n        return this._view.getProjection();\r\n    }\r\n\r\n    public getViewExtent(): number[] {\r\n        return this._view.calculateExtent(this._map.getSize());\r\n    }\r\n\r\n    protected async _getLegends(layer: BaseLayer): Promise<HTMLImageElement> {\r\n        return new Promise((resolve) => {\r\n            const srcs = this._getSrcFromParams(layer);\r\n\r\n            if (!srcs) {\r\n                return resolve(null);\r\n            }\r\n\r\n            srcs.forEach((src) => {\r\n                const img = new Image();\r\n                // to enable reorder\r\n                img.dataset.index = String(layer.getZIndex());\r\n\r\n                img.onerror = () => {\r\n                    resolve(null);\r\n                };\r\n                img.onload = () => {\r\n                    // discard empty images\r\n                    if (img.naturalHeight <= 1) {\r\n                        resolve(null);\r\n                    } else {\r\n                        resolve(img);\r\n                    }\r\n                };\r\n                img.src = src;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param layer\r\n     * @param inline\r\n     * @returns\r\n     */\r\n    protected _getSrcFromParams(layer): string[] {\r\n        const sourceParams = layer.getSource().getParams();\r\n\r\n        const proj = this.getMapProjection().getCode();\r\n\r\n        const params = {\r\n            SERVICE: 'WMS',\r\n            VERSION: '1.1.0',\r\n            REQUEST: 'GetLegendGraphic',\r\n            FORMAT: 'image/png',\r\n            LEGEND_OPTIONS: Object.entries(this._legendOptions)\r\n                .map((a) => `${a[0]}:${a[1]}`)\r\n                .join(';'),\r\n            STYLE: sourceParams.STYLES,\r\n            CQL_FILTER: sourceParams.CQL_FILTER,\r\n            SLD_BODY: sourceParams.SLD_BODY,\r\n            SLD: sourceParams.SLD,\r\n            ENV: sourceParams.ENV,\r\n            SRS: proj,\r\n            SRCWIDTH: this._map.getSize()[0],\r\n            SRCHEIGHT: this._map.getSize()[1],\r\n            SCALE: this._getScale(),\r\n            ...this._requestParams\r\n            // bug showing empty spaces betweeen labels\r\n            //TRANSPARENT: true\r\n        };\r\n\r\n        const layersName = sourceParams.LAYERS;\r\n        const layerNames = !Array.isArray(layersName)\r\n            ? layersName.split(',')\r\n            : layersName;\r\n\r\n        return [\r\n            this._getLegendUrl(layer.getSource() as TileWMS | ImageWMS, {\r\n                ...params,\r\n                LAYER: layerNames[0]\r\n            })\r\n        ];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param source\r\n     * @param params\r\n     * @returns\r\n     */\r\n    protected _getLegendUrl(source: TileWMS | ImageWMS, params) {\r\n        const url =\r\n            'getUrls' in source\r\n                ? source.getUrls()[0]\r\n                : 'getUrl' in source\r\n                ? source.getUrl()\r\n                : undefined;\r\n\r\n        if (!url) return undefined;\r\n\r\n        return appendParams(url, params);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    protected _orderImagesByIndex(\r\n        images: HTMLImageElement[]\r\n    ): HTMLImageElement[] {\r\n        const t = Array.from(images).sort((x, y) => {\r\n            const xIndex = Number(x.dataset.index);\r\n            const yIndex = Number(y.dataset.index);\r\n            if (xIndex > yIndex) return -1;\r\n            if (xIndex < yIndex) return 1;\r\n            return 0;\r\n        });\r\n\r\n        return t.reverse();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns\r\n     */\r\n    protected _getScale() {\r\n        const resolution = this._view.getResolution();\r\n        const mpu = this.getMapProjection()\r\n            ? this.getMapProjection().getMetersPerUnit()\r\n            : 1;\r\n        const pixelSize = 0.00028;\r\n        return (resolution * mpu) / pixelSize;\r\n    }\r\n}\r\n","export default function createElement(tagName, attrs = {}, ...children) {\r\n    if (typeof tagName === 'function') return tagName(attrs, children);\r\n\r\n    const elem =\r\n        tagName === null\r\n            ? new DocumentFragment()\r\n            : document.createElement(tagName);\r\n\r\n    Object.entries(attrs || {}).forEach(([name, value]) => {\r\n        if (\r\n            typeof value !== 'undefined' &&\r\n            value !== null &&\r\n            value !== undefined\r\n        ) {\r\n            if (name.startsWith('on') && name.toLowerCase() in window)\r\n                elem.addEventListener(name.toLowerCase().substr(2), value);\r\n            else {\r\n                if (name === 'className')\r\n                    elem.setAttribute('class', value.toString());\r\n                else if (name === 'htmlFor')\r\n                    elem.setAttribute('for', value.toString());\r\n                else elem.setAttribute(name, value.toString());\r\n            }\r\n        }\r\n    });\r\n\r\n    for (const child of children) {\r\n        if (!child) continue;\r\n        if (Array.isArray(child)) elem.append(...child);\r\n        else {\r\n            if (child.nodeType === undefined) elem.innerHTML += child;\r\n            else elem.appendChild(child);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n","import Map from 'ol/Map';\r\nimport View from 'ol/View.js';\r\nimport { getPointResolution } from 'ol/proj.js';\r\nimport { AttributionLike } from 'ol/source/Source';\r\n\r\nimport { jsPDF, TextOptionsLight } from 'jspdf';\r\nimport { getDocument, GlobalWorkerOptions, version } from 'pdfjs-dist';\r\n\r\nimport {\r\n    I18n,\r\n    Options,\r\n    IPrintOptions,\r\n    IWatermark,\r\n    IExtraInfo\r\n} from '../ol-pdf-printer';\r\nimport Legends from './MapElements/Legends';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\n/**\r\n * @private\r\n */\r\nexport default class Pdf {\r\n    protected _pdf: IPdf;\r\n    protected _view: View;\r\n    protected _map: Map;\r\n    protected _scaleDenominator: number;\r\n    protected _legends: Legends;\r\n    protected _form: IPrintOptions;\r\n    protected _style: Options['style'];\r\n    protected _i18n: I18n;\r\n    protected _printingMargins: IMargins;\r\n    protected _accumulativeOffsetBottomLeft = 0;\r\n\r\n    protected _config: Options;\r\n\r\n    constructor(params: IPdfOptions) {\r\n        const { map, form, i18n, config, height, width, scaleResolution } =\r\n            params;\r\n\r\n        this._map = map;\r\n        this._view = map.getView();\r\n        this._form = form;\r\n        this._i18n = i18n;\r\n        this._config = config;\r\n\r\n        this._style = config.style;\r\n\r\n        if (this._form.safeMargins) {\r\n            this._printingMargins =\r\n                typeof config.style.paperMargin === 'number'\r\n                    ? {\r\n                          top: config.style.paperMargin,\r\n                          left: config.style.paperMargin,\r\n                          right: config.style.paperMargin,\r\n                          bottom: config.style.paperMargin\r\n                      }\r\n                    : config.style.paperMargin;\r\n        } else {\r\n            this._printingMargins = {\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0\r\n            };\r\n        }\r\n\r\n        this._pdf = this.create(\r\n            this._form.orientation,\r\n            this._form.format,\r\n            height,\r\n            width\r\n        );\r\n\r\n        this._scaleDenominator = this._calculateScaleDenominator(\r\n            this._form.resolution,\r\n            scaleResolution\r\n        );\r\n\r\n        if (config.mapElements && config.mapElements.legends) {\r\n            this._legends = new Legends(config.mapElements.legends, map);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param orientation\r\n     * @param format\r\n     * @param width\r\n     * @param height\r\n     * @returns\r\n     * @protected\r\n     */\r\n    create(\r\n        orientation: IPrintOptions['orientation'],\r\n        format: IPrintOptions['format'],\r\n        height: number,\r\n        width: number\r\n    ): IPdf {\r\n        // UMD support\r\n        const _jsPDF =\r\n            (window as IWindow & typeof globalThis).jspdf?.jsPDF || jsPDF;\r\n\r\n        return {\r\n            doc: new _jsPDF({ orientation, format }),\r\n            height: height,\r\n            width: width\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param dataUrl\r\n     * @protected\r\n     */\r\n    addMapImage(dataUrl: string): void {\r\n        this._pdf.doc.addImage(\r\n            dataUrl,\r\n            'JPEG',\r\n            this._printingMargins.left, // Add margins\r\n            this._printingMargins.top,\r\n            this._pdf.width -\r\n                (this._printingMargins.left + this._printingMargins.right),\r\n            this._pdf.height -\r\n                (this._printingMargins.top + this._printingMargins.bottom)\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @protected\r\n     */\r\n    addMapHelpers = async (): Promise<void> => {\r\n        const { mapElements, extraInfo, description, watermark } = this._config;\r\n\r\n        if (watermark) {\r\n            await this._addWatermark(watermark);\r\n        }\r\n\r\n        if (description && this._form.description) {\r\n            this._addDescription();\r\n        }\r\n\r\n        if (extraInfo) {\r\n            this._addExtraInfo(extraInfo);\r\n        }\r\n\r\n        if (mapElements) {\r\n            if (mapElements.compass && this._form.compass) {\r\n                await this._addCompass(mapElements.compass);\r\n            }\r\n\r\n            if (mapElements.scalebar && this._form.scalebar) {\r\n                this._addScaleBar();\r\n            }\r\n\r\n            if (mapElements.attributions && this._form.attributions) {\r\n                this._addAttributions();\r\n            }\r\n\r\n            if (mapElements.legends && this._form.legends) {\r\n                await this._addLegends();\r\n            }\r\n        }\r\n\r\n        if (this._form.safeMargins) this._fllWhite();\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    savePdf(): Promise<void> {\r\n        const downloadURI = (uri: string, name: string): void => {\r\n            const link = <a download={name} href={uri}></a>;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            if (this._form.typeExport === 'pdf') {\r\n                this._pdf.doc.save(this._config.filename + '.pdf');\r\n                resolve();\r\n            } else {\r\n                const pdf = this._pdf.doc.output('dataurlstring');\r\n\r\n                // UMD support\r\n                const versionPdfJS =\r\n                    (window as IWindow & typeof globalThis)?.pdfjsLib\r\n                        ?.version || version;\r\n\r\n                GlobalWorkerOptions.workerSrc = `https://cdnjs.cloudflare.com/ajax/libs/pdf.js/${versionPdfJS}/pdf.worker.js`;\r\n\r\n                getDocument(pdf).promise.then(\r\n                    (pdf) => {\r\n                        pdf.getPage(1).then((page) => {\r\n                            // transform DPI correctly\r\n                            const scale = (this._form.resolution / 100) * 1.39;\r\n\r\n                            const viewport = page.getViewport({ scale });\r\n\r\n                            // Prepare canvas\r\n                            const canvas = <canvas />;\r\n                            canvas.style.display = 'none';\r\n                            document.body.appendChild(canvas);\r\n                            const context = canvas.getContext('2d');\r\n                            canvas.height = viewport.height;\r\n                            canvas.width = viewport.width;\r\n\r\n                            // Render PDF page into canvas context\r\n                            const task = page.render({\r\n                                canvasContext: context,\r\n                                viewport: viewport\r\n                            });\r\n                            task.promise.then(() => {\r\n                                downloadURI(\r\n                                    canvas.toDataURL(\r\n                                        `image/${this._form.typeExport}`\r\n                                    ),\r\n                                    this._config.filename +\r\n                                        `.${this._form.typeExport}`\r\n                                );\r\n                                canvas.remove();\r\n                                resolve();\r\n                            });\r\n                        });\r\n                    },\r\n                    (error: Error) => {\r\n                        reject(error);\r\n                        console.log(error);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add white rectangles to hide elements outside the map\r\n     */\r\n    protected _fllWhite(): void {\r\n        this._pdf.doc.setFillColor('#ffffff');\r\n        this._pdf.doc.rect(\r\n            0,\r\n            0,\r\n            this._printingMargins.left,\r\n            this._pdf.height,\r\n            'F'\r\n        );\r\n        this._pdf.doc.rect(\r\n            this._pdf.width - this._printingMargins.right,\r\n            0,\r\n            this._printingMargins.right,\r\n            this._pdf.height,\r\n            'F'\r\n        );\r\n        this._pdf.doc.rect(\r\n            0,\r\n            0,\r\n            this._pdf.width,\r\n            this._printingMargins.top,\r\n            'F'\r\n        );\r\n        this._pdf.doc.rect(\r\n            0,\r\n            this._pdf.height - this._printingMargins.bottom,\r\n            this._pdf.width,\r\n            this._printingMargins.bottom,\r\n            'F'\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Convert an SVGElement to an PNG string\r\n     * @param svg\r\n     * @returns\r\n     */\r\n    _processSvgImage = (svg: SVGElement): Promise<string> => {\r\n        // https://stackoverflow.com/questions/3975499/convert-svg-to-image-jpeg-png-etc-in-the-browser#answer-58142441\r\n        return new Promise((resolve, reject) => {\r\n            const svgToPng = (svg: SVGElement, callback) => {\r\n                const url = getSvgUrl(svg);\r\n                svgUrlToPng(url, (imgData: string) => {\r\n                    callback(imgData);\r\n                    URL.revokeObjectURL(url);\r\n                });\r\n            };\r\n\r\n            const getSvgUrl = (svg: SVGElement) => {\r\n                const data = new XMLSerializer().serializeToString(svg);\r\n                return URL.createObjectURL(\r\n                    new Blob([data], { type: 'image/svg+xml' })\r\n                );\r\n            };\r\n\r\n            const svgUrlToPng = (svgUrl: string, callback) => {\r\n                const svgImage = document.createElement('img');\r\n                document.body.appendChild(svgImage);\r\n\r\n                svgImage.onerror = (err) => {\r\n                    console.error(err);\r\n                    return reject(this._i18n.errorImage);\r\n                };\r\n\r\n                svgImage.onload = () => {\r\n                    try {\r\n                        const canvas = document.createElement('canvas');\r\n                        canvas.width = svgImage.clientWidth;\r\n                        canvas.height = svgImage.clientHeight;\r\n                        const canvasCtx = canvas.getContext('2d');\r\n                        canvasCtx.drawImage(svgImage, 0, 0);\r\n                        const imgData = canvas\r\n                            .toDataURL('image/png')\r\n                            .replace('image/png', 'octet/stream');\r\n                        callback(imgData);\r\n                        document.body.removeChild(svgImage);\r\n                    } catch (err) {\r\n                        return reject(err);\r\n                    }\r\n                };\r\n                svgImage.src = svgUrl;\r\n            };\r\n\r\n            svgToPng(svg, (imgData: string) => {\r\n                resolve(imgData);\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Adapted from http://hg.intevation.de/gemma/file/tip/client/src/components/Pdftool.vue#l252\r\n     * @protected\r\n     */\r\n    _calculateScaleDenominator(\r\n        resolution: number,\r\n        scaleResolution: number\r\n    ): number {\r\n        const pixelsPerMapMillimeter = resolution / 25.4;\r\n        return Math.round(\r\n            1000 *\r\n                pixelsPerMapMillimeter *\r\n                this._getMeterPerPixel(scaleResolution)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    _getMeterPerPixel(scaleResolution: number): number {\r\n        const proj = this._view.getProjection();\r\n        return (\r\n            getPointResolution(proj, scaleResolution, this._view.getCenter()) *\r\n            proj.getMetersPerUnit()\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param position\r\n     * @param offset\r\n     * @param size\r\n     * @returns\r\n     * @protected\r\n     */\r\n    _calculateOffsetByPosition = (\r\n        position: string,\r\n        offset: { x: number; y: number },\r\n        size = 0\r\n    ): { x: number; y: number } => {\r\n        let x: number, y: number;\r\n\r\n        switch (position) {\r\n            case 'topleft':\r\n                x = offset.x + this._printingMargins.left;\r\n                y = offset.y + this._printingMargins.top + size;\r\n                break;\r\n\r\n            case 'topright':\r\n                x = this._pdf.width - offset.x - this._printingMargins.left;\r\n                y = offset.y + this._printingMargins.top + size;\r\n                break;\r\n\r\n            case 'bottomright':\r\n                x = this._pdf.width - offset.x - this._printingMargins.left;\r\n                y =\r\n                    this._pdf.height -\r\n                    offset.y -\r\n                    this._printingMargins.bottom -\r\n                    size;\r\n                break;\r\n\r\n            case 'bottomleft':\r\n                y =\r\n                    this._pdf.height -\r\n                    offset.y -\r\n                    this._printingMargins.bottom -\r\n                    size;\r\n                x = offset.x + this._printingMargins.left;\r\n                break;\r\n        }\r\n\r\n        return { x, y };\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param height\r\n     * @param bkcolor\r\n     * @param brcolor\r\n     * @protected\r\n     */\r\n    _addRoundedBox = (\r\n        x: number,\r\n        y: number,\r\n        width: number,\r\n        height: number,\r\n        bkcolor: string,\r\n        brcolor: string\r\n    ): void => {\r\n        const rounding = 1;\r\n\r\n        this._pdf.doc.setDrawColor(brcolor);\r\n        this._pdf.doc.setFillColor(bkcolor);\r\n\r\n        this._pdf.doc.roundedRect(\r\n            x,\r\n            y,\r\n            width,\r\n            height,\r\n            rounding,\r\n            rounding,\r\n            'FD'\r\n        );\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @param width\r\n     * @param fontSize\r\n     * @param color\r\n     * @param align\r\n     * @param str\r\n     * @protected\r\n     */\r\n    _addText = (\r\n        x: number,\r\n        y: number,\r\n        fontSize: number,\r\n        color: string,\r\n        align: TextOptionsLight['align'] = 'left',\r\n        str: string\r\n    ): void => {\r\n        this._pdf.doc.setTextColor(color);\r\n        this._pdf.doc.setFontSize(fontSize);\r\n\r\n        this._pdf.doc.text(str, x, y, {\r\n            align\r\n        });\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param position\r\n     * @param offset\r\n     * @param width\r\n     * @param fontSize\r\n     * @param color\r\n     * @param align\r\n     * @param str\r\n     * @protected\r\n     */\r\n    _addTextByOffset = (\r\n        position: string,\r\n        offset: { x: number; y: number },\r\n        width: number,\r\n        fontSize: number,\r\n        color: string,\r\n        align: TextOptionsLight['align'],\r\n        str: string\r\n    ): void => {\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n        const fixX = align === 'center' ? x - width / 2 : x;\r\n        this._addText(fixX, y, fontSize, color, align, str);\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    _addDescription = (): void => {\r\n        const str = this._form.description.trim();\r\n        const position = 'topleft';\r\n        const offset = {\r\n            x: -0.7,\r\n            y:\r\n                this._config.extraInfo &&\r\n                ((this._config.extraInfo.date && this._form.date) ||\r\n                    (this._config.extraInfo.specs && this._form.specs))\r\n                    ? 10\r\n                    : 2\r\n        };\r\n        const fontSize = 8;\r\n        const maxWidth = 50;\r\n\r\n        const paddingBack = 2;\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        this._pdf.doc.setTextColor(this._style.description.txcolor);\r\n        this._pdf.doc.setFontSize(fontSize);\r\n\r\n        const { w, h } = this._pdf.doc.getTextDimensions(str, {\r\n            maxWidth,\r\n            fontSize\r\n        });\r\n\r\n        this._addRoundedBox(\r\n            x,\r\n            y,\r\n            w + paddingBack * 2,\r\n            h + paddingBack * 2,\r\n            this._style.description.bkcolor,\r\n            this._style.description.brcolor\r\n        );\r\n\r\n        this._pdf.doc.text(str, x + paddingBack, y + paddingBack * 2, {\r\n            align: 'left',\r\n            maxWidth\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This function is a mess\r\n     * @returns\r\n     * @protected\r\n     */\r\n    _addWatermark = async (watermark: IWatermark): Promise<void> => {\r\n        const getImageElement = async (\r\n            image: string | SVGElement\r\n        ): Promise<HTMLImageElement> => {\r\n            let imgData: string;\r\n\r\n            if (typeof image === 'string') {\r\n                imgData = image;\r\n            } else if (image instanceof SVGElement) {\r\n                imgData = await this._processSvgImage(image);\r\n            } else {\r\n                throw this._i18n.errorImage;\r\n            }\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const image = new Image();\r\n                image.onload = () => {\r\n                    try {\r\n                        resolve(image);\r\n                    } catch (err) {\r\n                        return reject(err);\r\n                    }\r\n                };\r\n                image.onerror = () => {\r\n                    return reject(this._i18n.errorImage);\r\n                };\r\n                image.src = imgData;\r\n            });\r\n        };\r\n\r\n        let logoImage: HTMLImageElement;\r\n\r\n        const position = 'topright';\r\n        const offset = { x: 2, y: 2 };\r\n        const fontSize = 14;\r\n\r\n        const logoSizeHeight = 12;\r\n        let logoSizeWidth: number;\r\n\r\n        const fontSizeSubtitle = fontSize / 1.8;\r\n\r\n        let back = false;\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        const paddingBack = 2;\r\n\r\n        let marginRight = 0;\r\n\r\n        let backBoxHeight = paddingBack * 2;\r\n\r\n        let titleYPosition = y + paddingBack + 1.5;\r\n\r\n        let subtitleYPosition = y + paddingBack;\r\n\r\n        let logoSpace = 0;\r\n\r\n        if (watermark.logo) {\r\n            if (watermark.logo instanceof Image) {\r\n                logoImage = watermark.logo;\r\n            } else {\r\n                logoImage = await getImageElement(watermark.logo);\r\n            }\r\n\r\n            const aspectRatio = logoImage.width / logoImage.height;\r\n\r\n            logoSizeWidth = logoSizeHeight * aspectRatio;\r\n\r\n            // space between text and logo\r\n            logoSpace = 3;\r\n\r\n            marginRight = logoSizeWidth + logoSpace;\r\n\r\n            backBoxHeight += 14;\r\n\r\n            if (watermark.title) {\r\n                titleYPosition += 4;\r\n                subtitleYPosition += 2;\r\n            }\r\n\r\n            if (watermark.subtitle) {\r\n                subtitleYPosition += 5;\r\n                titleYPosition -= 2;\r\n            }\r\n        } else {\r\n            if (watermark.title) {\r\n                backBoxHeight += 5;\r\n                subtitleYPosition += 5;\r\n            }\r\n\r\n            if (watermark.subtitle) {\r\n                backBoxHeight += 3;\r\n            }\r\n\r\n            if (watermark.title && watermark.subtitle) {\r\n                backBoxHeight += 1;\r\n            }\r\n        }\r\n\r\n        if (watermark.title) {\r\n            this._pdf.doc.setTextColor(this._style.watermark.txcolortitle);\r\n            this._pdf.doc.setFontSize(fontSize);\r\n            this._pdf.doc.setFont('helvetica', 'bold');\r\n\r\n            let { w } = this._pdf.doc.getTextDimensions(watermark.title);\r\n\r\n            if (watermark.subtitle) {\r\n                this._pdf.doc.setFontSize(fontSizeSubtitle);\r\n                this._pdf.doc.setFont('helvetica', 'normal');\r\n                const wSub = this._pdf.doc.getTextDimensions(\r\n                    watermark.subtitle\r\n                ).w;\r\n                w = wSub > w ? wSub : w;\r\n                this._pdf.doc.setFontSize(fontSize);\r\n            }\r\n\r\n            // Adaptable width, fixed height\r\n            const widthBack = w + paddingBack * 2;\r\n\r\n            this._addRoundedBox(\r\n                x - widthBack + 2 - marginRight,\r\n                y - 4,\r\n                widthBack + paddingBack + marginRight + logoSpace,\r\n                backBoxHeight,\r\n                this._style.watermark.bkcolor,\r\n                this._style.watermark.brcolor\r\n            );\r\n            back = true;\r\n            this._pdf.doc.setFont('helvetica', 'bold');\r\n            this._pdf.doc.text(\r\n                watermark.title,\r\n                x - marginRight,\r\n                titleYPosition,\r\n                {\r\n                    align: 'right'\r\n                }\r\n            );\r\n        }\r\n\r\n        if (watermark.subtitle) {\r\n            this._pdf.doc.setTextColor(this._style.watermark.txcolorsubtitle);\r\n            this._pdf.doc.setFontSize(fontSizeSubtitle);\r\n            this._pdf.doc.setFont('helvetica', 'normal');\r\n\r\n            // only subtitle, no title\r\n            if (!back) {\r\n                const { w } = this._pdf.doc.getTextDimensions(\r\n                    watermark.subtitle\r\n                );\r\n                const widthBack = paddingBack * 2 + w;\r\n                this._addRoundedBox(\r\n                    x - widthBack + 2 - marginRight,\r\n                    y - 4,\r\n                    widthBack + paddingBack + marginRight,\r\n                    backBoxHeight,\r\n                    this._style.watermark.bkcolor,\r\n                    this._style.watermark.brcolor\r\n                );\r\n                back = true;\r\n            }\r\n\r\n            this._pdf.doc.text(\r\n                watermark.subtitle,\r\n                x - marginRight,\r\n                subtitleYPosition,\r\n                {\r\n                    align: 'right'\r\n                }\r\n            );\r\n        }\r\n\r\n        if (!watermark.logo) return;\r\n\r\n        if (!back) {\r\n            const widthBack = marginRight + paddingBack;\r\n            this._addRoundedBox(\r\n                x,\r\n                y - 4,\r\n                widthBack,\r\n                16,\r\n                this._style.watermark.bkcolor,\r\n                this._style.watermark.brcolor\r\n            );\r\n        }\r\n\r\n        this._pdf.doc.addImage(\r\n            logoImage,\r\n            'PNG',\r\n            x - logoSizeWidth,\r\n            y,\r\n            logoSizeWidth,\r\n            logoSizeHeight\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Info displayed at the bottom of the map\r\n     * @protected\r\n     */\r\n    protected _addExtraInfo = (extraInfo: IExtraInfo): void => {\r\n        if (extraInfo.url && this._form.url) {\r\n            this._addUrl();\r\n        }\r\n\r\n        if (\r\n            (extraInfo.specs && this._form.specs) ||\r\n            (extraInfo.date && this._form.date)\r\n        ) {\r\n            this._addSpecsAndDate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _addSpecsAndDate = (): void => {\r\n        const position = 'topleft';\r\n        const offset = {\r\n            x: 1,\r\n            y: 2.5\r\n        };\r\n        const fontSize = 6;\r\n        const txcolor = this._style.specs.txcolor;\r\n        const align = 'left';\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        this._pdf.doc.setFont('helvetica', 'bold');\r\n        this._pdf.doc.setFontSize(fontSize);\r\n\r\n        let str = '';\r\n\r\n        if (\r\n            this._form.specs &&\r\n            this._config.extraInfo &&\r\n            this._config.extraInfo.specs\r\n        ) {\r\n            const scale = `${\r\n                this._i18n.scale\r\n            } 1:${this._scaleDenominator.toLocaleString('de')}`;\r\n            const paper = `${\r\n                this._i18n.paper\r\n            } ${this._form.format.toUpperCase()}`;\r\n            const dpi = `${this._form.resolution} DPI`;\r\n            const specs = [scale, dpi, paper];\r\n            str = specs.join(' - ');\r\n        }\r\n\r\n        if (\r\n            this._form.date &&\r\n            this._config.extraInfo &&\r\n            this._config.extraInfo.date\r\n        ) {\r\n            const date = this._getDate();\r\n\r\n            if (str) {\r\n                str += ` (${date})`;\r\n            } else {\r\n                str = date;\r\n            }\r\n        }\r\n\r\n        const { w, h } = this._pdf.doc.getTextDimensions(str, { fontSize });\r\n\r\n        const paddingBack = 2;\r\n\r\n        this._addRoundedBox(\r\n            x - paddingBack * 2,\r\n            y - h - paddingBack * 2,\r\n            w + paddingBack * 3,\r\n            h + paddingBack * 3,\r\n            this._style.specs.bkcolor,\r\n            this._style.specs.brcolor\r\n        );\r\n\r\n        this._addTextByOffset(\r\n            position,\r\n            offset,\r\n            w,\r\n            fontSize,\r\n            txcolor,\r\n            align,\r\n            str\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _addUrl = (): void => {\r\n        const position = 'bottomleft';\r\n        const width = 250;\r\n        const offset = {\r\n            x: 1,\r\n            y: 1\r\n        };\r\n\r\n        const fontSize = 6;\r\n        const txcolor = this._style.url.txcolor;\r\n        const align = 'left';\r\n\r\n        this._pdf.doc.setFont('helvetica', 'italic');\r\n        const str = window.location.href;\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        const { w, h } = this._pdf.doc.getTextDimensions(str, {\r\n            fontSize\r\n        });\r\n\r\n        const paddingBack = 2;\r\n\r\n        this._addRoundedBox(\r\n            x - paddingBack * 2,\r\n            y - h - 1,\r\n            w + paddingBack * 3,\r\n            h + paddingBack * 3,\r\n            this._style.url.bkcolor,\r\n            this._style.url.brcolor\r\n        );\r\n\r\n        this._addTextByOffset(\r\n            position,\r\n            offset,\r\n            width,\r\n            fontSize,\r\n            txcolor,\r\n            align,\r\n            str\r\n        );\r\n\r\n        this._accumulativeOffsetBottomLeft = offset.y + h + 1;\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _getDate = (): string => {\r\n        return String(\r\n            new Date(Date.now()).toLocaleDateString(this._config.dateFormat)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * The attributions are obtained from the Control in the DOM.\r\n     * @protected\r\n     */\r\n    protected _addAttributions = (): void => {\r\n        const createNode = (content: string): HTMLElement => {\r\n            return <span>{content}</span>;\r\n        };\r\n\r\n        const attributions: string[] = this._map\r\n            .getLayers()\r\n            .getArray()\r\n            .flatMap((l) => {\r\n                if ('getSource' in l && typeof l.getSource === 'function') {\r\n                    const attr = l\r\n                        .getSource()\r\n                        .getAttributions() as AttributionLike;\r\n                    if (attr) {\r\n                        if (typeof attr === 'function') {\r\n                            try {\r\n                                return attr(null);\r\n                            } catch (err) {\r\n                                console.error(err);\r\n                            }\r\n                        }\r\n                        return attr as string | string[];\r\n                    }\r\n                }\r\n                return [];\r\n            });\r\n\r\n        if (!attributions.length) return;\r\n\r\n        // remove duplicates and create nodes\r\n        const attributionsList = [...new Set(attributions)].map((a) => {\r\n            return createNode(a);\r\n        });\r\n\r\n        const ATTRI_SEPATATOR = ' · ';\r\n\r\n        const position = 'bottomright';\r\n        const offset = { x: 1, y: 1 };\r\n        const fontSize = 7;\r\n\r\n        this._pdf.doc.setFont('helvetica', 'normal');\r\n        this._pdf.doc.setFontSize(fontSize);\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        let xPos = x;\r\n\r\n        const attributionsText = attributionsList\r\n            .map((a) => a.textContent)\r\n            .join(ATTRI_SEPATATOR);\r\n\r\n        const { w, h } = this._pdf.doc.getTextDimensions(attributionsText, {\r\n            fontSize\r\n        });\r\n\r\n        const paddingBack = 4;\r\n\r\n        const whiteSpaceWidth = this._pdf.doc.getTextDimensions(\r\n            ATTRI_SEPATATOR,\r\n            { fontSize }\r\n        ).w;\r\n\r\n        this._addRoundedBox(\r\n            x - w - 2,\r\n            y - h,\r\n            w + paddingBack + 2,\r\n            h + paddingBack,\r\n            this._style.attributions.bkcolor,\r\n            this._style.attributions.brcolor\r\n        );\r\n\r\n        Array.from(attributionsList)\r\n            .reverse()\r\n            .forEach((attribution, index) => {\r\n                Array.from(attribution.childNodes)\r\n                    .reverse()\r\n                    .forEach((node) => {\r\n                        const content = node.textContent;\r\n\r\n                        if ('href' in node) {\r\n                            this._pdf.doc.setTextColor(\r\n                                this._style.attributions.txcolorlink\r\n                            );\r\n                            this._pdf.doc.textWithLink(content, xPos, y, {\r\n                                align: 'right',\r\n                                url: (node as HTMLAnchorElement).href\r\n                            });\r\n                        } else {\r\n                            this._pdf.doc.setTextColor(\r\n                                this._style.attributions.txcolor\r\n                            );\r\n                            this._pdf.doc.text(content, xPos, y, {\r\n                                align: 'right'\r\n                            });\r\n                        }\r\n\r\n                        const { w } = this._pdf.doc.getTextDimensions(content);\r\n                        xPos -= w;\r\n                    });\r\n\r\n                // Excldue last element\r\n                if (index !== attributionsList.length - 1) {\r\n                    // To add separation between diferents attributtions\r\n                    this._pdf.doc.text(ATTRI_SEPATATOR, xPos, y, {\r\n                        align: 'right'\r\n                    });\r\n\r\n                    xPos -= whiteSpaceWidth;\r\n                }\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Adapted from http://hg.intevation.de/gemma/file/tip/client/src/components/Pdftool.vue#l252\r\n     * @protected\r\n     */\r\n    protected _addScaleBar = (): void => {\r\n        const offset = {\r\n            x: -0.7,\r\n            y:\r\n                this._config.extraInfo &&\r\n                ((this._form.url && this._config.extraInfo.url) ||\r\n                    (this._form.specs && this._config.extraInfo.specs))\r\n                    ? this._accumulativeOffsetBottomLeft + 12\r\n                    : 12\r\n        };\r\n\r\n        const position = 'bottomleft';\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        const maxWidth = 90; // in mm\r\n\r\n        // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log10#Polyfill\r\n        const log10 =\r\n            Math.log10 || // more precise, but unsupported by IE\r\n            function (x) {\r\n                return Math.log(x) * Math.LOG10E;\r\n            };\r\n\r\n        let maxLength = maxWidth * this._scaleDenominator;\r\n\r\n        let unit: string;\r\n        let unitConversionFactor: number;\r\n\r\n        if (this._config.units === 'metric') {\r\n            unit = 'mm';\r\n\r\n            const millimetre = 1;\r\n            const metre = 1000;\r\n            const kilometre = metre * 1000;\r\n\r\n            unitConversionFactor = millimetre;\r\n\r\n            if (maxLength >= kilometre * 10) {\r\n                unit = 'km';\r\n                unitConversionFactor = 1e6;\r\n            } else if (maxLength >= metre * 10) {\r\n                unit = 'm';\r\n                unitConversionFactor = metre;\r\n            }\r\n        } else if (this._config.units === 'imperial') {\r\n            const inch = 25.4; // Millimetre to inch\r\n            const mile = inch * 63360;\r\n            const yard = inch * 36;\r\n\r\n            unit = 'in';\r\n            unitConversionFactor = inch;\r\n\r\n            if (maxLength >= mile * 10) {\r\n                unit = 'mi';\r\n                unitConversionFactor = mile;\r\n            } else if (maxLength >= yard * 10) {\r\n                unit = 'yd';\r\n                unitConversionFactor = yard;\r\n            }\r\n        }\r\n\r\n        maxLength /= unitConversionFactor;\r\n\r\n        const unroundedLength = maxLength;\r\n        const numberOfDigits = Math.floor(log10(unroundedLength));\r\n        const factor = Math.pow(10, numberOfDigits);\r\n        const mapped = unroundedLength / factor;\r\n\r\n        let length = Math.floor(maxLength); // just to have an upper limit\r\n\r\n        // manually only use numbers that are very nice to devide by 4\r\n        // note that this is taken into account for rounding later\r\n        if (mapped > 8) {\r\n            length = 8 * factor;\r\n        } else if (mapped > 4) {\r\n            length = 4 * factor;\r\n        } else if (mapped > 2) {\r\n            length = 2 * factor;\r\n        } else {\r\n            length = factor;\r\n        }\r\n\r\n        let size = (length * unitConversionFactor) / this._scaleDenominator / 4;\r\n\r\n        const percentageMargin = this._form.safeMargins\r\n            ? ((this._printingMargins.left + this._printingMargins.right) /\r\n                  this._pdf.width) *\r\n              100\r\n            : null;\r\n\r\n        // Reduce length acording to margins\r\n        size = percentageMargin\r\n            ? (size / 100) * (100 - percentageMargin)\r\n            : size;\r\n\r\n        const fullSize = size * 4;\r\n\r\n        // to give the outer white box 4mm padding\r\n        const scaleBarX = x + 4;\r\n        const scaleBarY = y + 5; // 5, a little more, to make space for the numbers above\r\n\r\n        // draw outer box\r\n        this._addRoundedBox(\r\n            x,\r\n            y,\r\n            fullSize + 8,\r\n            10,\r\n            this._style.scalebar.bkcolor,\r\n            this._style.scalebar.brcolor\r\n        );\r\n\r\n        // draw first part of scalebar\r\n        this._pdf.doc.setDrawColor(this._style.scalebar.txcolor);\r\n        this._pdf.doc.setFillColor(this._style.scalebar.txcolor);\r\n        this._pdf.doc.rect(scaleBarX, scaleBarY, size, 1, 'FD');\r\n\r\n        // draw second part of scalebar\r\n        this._pdf.doc.setDrawColor(this._style.scalebar.txcolor);\r\n        this._pdf.doc.setFillColor(this._style.scalebar.bkcolor);\r\n        this._pdf.doc.rect(scaleBarX + size, scaleBarY, size, 1, 'FD');\r\n\r\n        // draw third part of scalebar\r\n        this._pdf.doc.setDrawColor(this._style.scalebar.txcolor);\r\n        this._pdf.doc.setFillColor(this._style.scalebar.txcolor);\r\n        this._pdf.doc.rect(scaleBarX + size * 2, scaleBarY, size * 2, 1, 'FD');\r\n\r\n        // draw numeric labels above scalebar\r\n        this._pdf.doc.setTextColor(this._style.scalebar.txcolor);\r\n        this._pdf.doc.setFontSize(6);\r\n        this._pdf.doc.text('0', scaleBarX, scaleBarY - 1);\r\n        // /4 and could give 2.5. We still round, because of floating point arith\r\n        this._pdf.doc.text(\r\n            String(Math.round((length * 10) / 4) / 10),\r\n            scaleBarX + size - 1,\r\n            scaleBarY - 1\r\n        );\r\n        this._pdf.doc.text(\r\n            String(Math.round(length / 2)),\r\n            scaleBarX + size * 2 - 2,\r\n            scaleBarY - 1\r\n        );\r\n        this._pdf.doc.text(\r\n            Math.round(length).toString() + ' ' + unit,\r\n            scaleBarX + size * 4 - 4,\r\n            scaleBarY - 1\r\n        );\r\n\r\n        this._accumulativeOffsetBottomLeft = offset.y;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param imgSrc\r\n     * @returns\r\n     * @protected\r\n     */\r\n    protected _addCompass = async (\r\n        imgSrc: HTMLImageElement | string | SVGElement\r\n    ): Promise<void> => {\r\n        const position = 'bottomright';\r\n        const offset = { x: 2, y: 6 };\r\n        const size = 6;\r\n        const rotationRadians = this._view.getRotation();\r\n        const imageSize = 100;\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(\r\n            position,\r\n            offset,\r\n            size\r\n        );\r\n\r\n        const addRotation = (image: CanvasImageSource) => {\r\n            const canvas = document.createElement('canvas');\r\n\r\n            // Must be bigger than the image to prevent clipping\r\n            canvas.height = 120;\r\n            canvas.width = 120;\r\n            const context = canvas.getContext('2d');\r\n\r\n            context.translate(canvas.width * 0.5, canvas.height * 0.5);\r\n            context.rotate(rotationRadians);\r\n            context.translate(-canvas.width * 0.5, -canvas.height * 0.5);\r\n            context.drawImage(\r\n                image,\r\n                (canvas.height - imageSize) / 2,\r\n                (canvas.width - imageSize) / 2,\r\n                imageSize,\r\n                imageSize\r\n            );\r\n\r\n            // Add back circle\r\n            const xCircle = x - size;\r\n            const yCircle = y;\r\n            this._pdf.doc.setDrawColor(this._style.compass.brcolor);\r\n            this._pdf.doc.setFillColor(this._style.compass.bkcolor);\r\n            this._pdf.doc.circle(xCircle, yCircle, size, 'FD');\r\n\r\n            return canvas;\r\n        };\r\n\r\n        const addImage = (image: CanvasImageSource): void => {\r\n            const rotatedCanvas = addRotation(image);\r\n\r\n            const sizeImage = size * 1.5;\r\n            const xImage = x - sizeImage - size / 4.3;\r\n            const yImage = y - sizeImage / 2;\r\n\r\n            this._pdf.doc.addImage(\r\n                rotatedCanvas,\r\n                'PNG',\r\n                xImage,\r\n                yImage,\r\n                sizeImage,\r\n                sizeImage\r\n            );\r\n        };\r\n\r\n        let image: HTMLImageElement;\r\n\r\n        if (imgSrc instanceof Image) {\r\n            addImage(image);\r\n            return;\r\n        } else {\r\n            let imgData: string;\r\n\r\n            if (typeof imgSrc === 'string') {\r\n                imgData = imgSrc;\r\n            } else if (imgSrc instanceof SVGElement) {\r\n                imgData = await this._processSvgImage(imgSrc);\r\n            } else {\r\n                throw this._i18n.errorImage;\r\n            }\r\n\r\n            return new Promise((resolve, reject) => {\r\n                const image = new Image(imageSize, imageSize);\r\n\r\n                image.onload = () => {\r\n                    addImage(image);\r\n                    resolve();\r\n                };\r\n\r\n                image.onerror = () => {\r\n                    reject(this._i18n.errorImage);\r\n                };\r\n\r\n                image.src = imgData;\r\n            });\r\n        }\r\n    };\r\n\r\n    protected async _addLegends() {\r\n        const position = 'bottomleft';\r\n\r\n        const offset = {\r\n            x: 1,\r\n            y: this._accumulativeOffsetBottomLeft + 3\r\n        };\r\n\r\n        const { x, y } = this._calculateOffsetByPosition(position, offset);\r\n\r\n        let yPos = y;\r\n\r\n        const images: HTMLImageElement[] = await this._legends.getImages(\r\n            this._form.resolution * 1.5,\r\n            this._style.legends.txcolor,\r\n            this._style.legends.bkcolor\r\n        );\r\n\r\n        if (!images.length) {\r\n            return;\r\n        }\r\n\r\n        const ratioSize = 1 / (this._form.resolution / 15);\r\n\r\n        const largestWidth =\r\n            Math.max(...images.map((i) => i.naturalWidth)) * ratioSize;\r\n        const accumulativeHeight = images.reduce(\r\n            (acc, curr) => acc + curr.naturalHeight * ratioSize,\r\n            0\r\n        );\r\n\r\n        const paddingBack = 1;\r\n\r\n        this._addRoundedBox(\r\n            x - paddingBack * 3,\r\n            y - accumulativeHeight - paddingBack,\r\n            largestWidth + paddingBack * 2 * 3,\r\n            accumulativeHeight + paddingBack * 2,\r\n            this._style.legends.bkcolor,\r\n            this._style.legends.brcolor\r\n        );\r\n\r\n        images.forEach((img) => {\r\n            const { naturalWidth, naturalHeight } = img;\r\n            const width = naturalWidth * ratioSize;\r\n            const height = naturalHeight * ratioSize;\r\n            this._pdf.doc.addImage(img, x, yPos - height, width, height);\r\n            yPos -= height;\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n * @protected\r\n */\r\ninterface IMargins {\r\n    top: number;\r\n    right: number;\r\n    bottom: number;\r\n    left: number;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n * @protected\r\n */\r\ninterface IWindow extends Window {\r\n    jspdf: any;\r\n    pdfjsLib: any;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n * @protected\r\n */\r\nexport interface IPdf {\r\n    doc: jsPDF;\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ninterface IPdfOptions {\r\n    map: Map;\r\n    form: IPrintOptions;\r\n    i18n: I18n;\r\n    config: Options;\r\n    height: number;\r\n    width: number;\r\n    scaleResolution: number;\r\n}\r\n","/**\n * Vanilla JS Modal compatible with Bootstrap\n * modal-vanilla 0.12.0 <https://github.com/KaneCohen/modal-vanilla>\n * Copyright 2020 Kane Cohen <https://github.com/KaneCohen>\n * Available under BSD-3-Clause license\n */\nimport EventEmitter from 'events';\n\nlet _factory = null;\n\nconst _defaults = Object.freeze({\n  el: null,               // Existing DOM element that will be 'Modal-ized'.\n  animate: true,          // Show Modal using animation.\n  animateClass: 'fade',   //\n  animateInClass: 'show', //\n  appendTo: 'body',       // DOM element to which constructed Modal will be appended.\n  backdrop: true,         // Boolean or 'static', Show Modal backdrop blocking content.\n  keyboard: true,         // Close modal on esc key.\n  title: false,           // Content of the title in the constructed dialog.\n  header: true,           // Show header content.\n  content: false,         // Either string or an HTML element.\n  footer: true,           // Footer content. By default will use buttons.\n  buttons: null,          //\n  headerClose: true,      // Show close button in the header.\n  construct: false,       // Creates new HTML with a given content.\n  transition: 300,        //\n  backdropTransition: 150 //\n});\n\nconst _buttons = deepFreeze({\n  dialog: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  alert: [\n    {text: 'OK',\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ],\n  confirm: [\n    {text: 'Cancel',\n      value: false,\n      attr: {\n        'class': 'btn btn-default',\n        'data-dismiss': 'modal'\n      }\n    },\n    {text: 'OK',\n      value: true,\n      attr: {\n        'class': 'btn btn-primary',\n        'data-dismiss': 'modal'\n      }\n    }\n  ]\n});\n\nconst _templates = {\n  container: '<div class=\"modal\"></div>',\n  dialog: '<div class=\"modal-dialog\"></div>',\n  content: '<div class=\"modal-content\"></div>',\n  header: '<div class=\"modal-header\"></div>',\n  headerClose: '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>',\n  body: '<div class=\"modal-body\"></div>',\n  footer: '<div class=\"modal-footer\"></div>',\n  backdrop: '<div class=\"modal-backdrop\"></div>'\n};\n\nfunction deepFreeze(obj) {\n  for (let k in obj) {\n    if (Array.isArray(obj[k])) {\n      obj[k].forEach(v => {\n        deepFreeze(v);\n      });\n    } else if (obj[k] !== null && typeof obj[k] === 'object') {\n      Object.freeze(obj[k]);\n    }\n  }\n  return Object.freeze(obj);\n}\n\nfunction guid() {\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16) +\n    (((1 + Math.random()) * 0x10000) | 0).toString(16);\n}\n\nfunction data(el, prop, value) {\n let prefix = 'data';\n let elData = el[prefix] || {};\n if (typeof value === 'undefined') {\n   if (el[prefix] && el[prefix][prop]) {\n     return el[prefix][prop];\n   } else {\n     var dataAttr = el.getAttribute(`${prefix}-${prop}`);\n     if (typeof dataAttr !== 'undefined') {\n       return dataAttr;\n     }\n     return null;\n   }\n } else {\n   elData[prop] = value;\n   el[prefix] = elData;\n   return el;\n }\n}\n\nfunction build(html, all) {\n  if (html.nodeName) return html;\n  html = html.replace(/(\\t|\\n$)/g, '');\n\n  if (!_factory) {\n    _factory = document.createElement('div');\n  }\n\n  _factory.innerHTML = '';\n  _factory.innerHTML = html;\n  if (all === true) {\n    return _factory.childNodes;\n  } else {\n    return _factory.childNodes[0];\n  }\n}\n\nfunction calcScrollbarWidth() {\n  let inner;\n  let width;\n  let outerWidth;\n  let outer = document.createElement('div');\n  Object.assign(outer.style, {\n    visibility: 'hidden',\n    width: '100px'\n  });\n  document.body.appendChild(outer);\n\n  outerWidth = outer.offsetWidth;\n  outer.style.overflow = 'scroll';\n\n  inner = document.createElement('div');\n  inner.style.width = '100%';\n  outer.appendChild(inner);\n\n  width = outerWidth - inner.offsetWidth;\n  document.body.removeChild(outer);\n\n  return width;\n}\n\nfunction getPath(node) {\n  let nodes = [node];\n  while (node.parentNode) {\n    node = node.parentNode;\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nclass Modal extends EventEmitter {\n  static set templates(templates) {\n    this._baseTemplates = templates;\n  }\n\n  static get templates() {\n    return Object.assign({}, _templates, Modal._baseTemplates || {});\n  }\n\n  static set buttons(buttons) {\n    this._baseButtons = buttons;\n  }\n\n  static get buttons() {\n    return Object.assign({}, _buttons, Modal._baseButtons || {});\n  }\n\n  static set options(options) {\n    this._baseOptions = options;\n  }\n\n  static get options() {\n    return Object.assign({}, _defaults, Modal._baseOptions || {});\n  }\n\n  static get version() {\n    return '0.12.0';\n  }\n\n  static alert(message, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  message,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.alert\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  static confirm(question, _options = {}) {\n    let options = Object.assign({},\n      _defaults,\n      {\n        title:  question,\n        content: false,\n        construct: true,\n        headerClose: false,\n        buttons: Modal.buttons.confirm\n      },\n      _options\n    );\n\n    return new Modal(options);\n  }\n\n  constructor(options = {}) {\n    super();\n\n    this.id = guid();\n    this.el = null;\n    this._html = {};\n    this._events = {};\n    this._visible = false;\n    this._pointerInContent = false;\n    this._options = Object.assign({}, Modal.options, options);\n    this._templates = Object.assign({}, Modal.templates, options.templates || {});\n    this._html.appendTo = document.querySelector(this._options.appendTo);\n    this._scrollbarWidth = calcScrollbarWidth();\n\n    if (this._options.buttons === null) {\n      this._options.buttons = Modal.buttons.dialog;\n    }\n\n    if (this._options.el) {\n      let el = this._options.el;\n      if (typeof this._options.el == 'string') {\n        el = document.querySelector(this._options.el);\n        if (! el) {\n          throw new Error(`Selector: DOM Element ${this._options.el} not found.`);\n        }\n      }\n      data(el, 'modal', this);\n      this.el = el;\n    } else {\n      this._options.construct = true;\n    }\n\n    if (this._options.construct) {\n      this._render();\n    } else {\n      this._mapDom();\n    }\n  }\n\n  _render() {\n    let html = this._html;\n    let o = this._options;\n    let t = this._templates;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.container = build(t.container);\n    html.dialog = build(t.dialog);\n    html.content = build(t.content);\n    html.header = build(t.header);\n    html.headerClose = build(t.headerClose);\n    html.body = build(t.body);\n    html.footer = build(t.footer);\n    if (animate) html.container.classList.add(animate);\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    this.el = html.container;\n\n    html.dialog.appendChild(html.content);\n    html.container.appendChild(html.dialog);\n\n    return this;\n  }\n\n  _mapDom() {\n    let html = this._html;\n    let o = this._options;\n\n    if (this.el.classList.contains(o.animateClass)) {\n      o.animate = true;\n    }\n\n    html.container = this.el;\n    html.dialog = this.el.querySelector('.modal-dialog');\n    html.content = this.el.querySelector('.modal-content');\n    html.header = this.el.querySelector('.modal-header');\n    html.headerClose = this.el.querySelector('.modal-header .close');\n    html.body = this.el.querySelector('.modal-body');\n    html.footer = this.el.querySelector('.modal-footer');\n\n    this._setHeader();\n    this._setContent();\n    this._setFooter();\n\n    return this;\n  }\n\n  _setHeader() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.header && html.header) {\n      if (o.title.nodeName) {\n        html.header.innerHTML = o.title.outerHTML;\n      } else if (typeof o.title === 'string') {\n        html.header.innerHTML = `<h4 class=\"modal-title\">${o.title}</h4>`;\n      }\n      // Add header close button only to constructed modals.\n      if (this.el === null && html.headerClose && o.headerClose) {\n        html.header.appendChild(html.headerClose);\n      }\n      if (o.construct) {\n        html.content.appendChild(html.header);\n      }\n    }\n  }\n\n  _setContent() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.content && html.body) {\n      if (typeof o.content === 'string') {\n        html.body.innerHTML = o.content;\n      } else {\n        html.body.innerHTML = o.content.outerHTML;\n      }\n      if (o.construct) {\n        html.content.appendChild(html.body);\n      }\n    }\n  }\n\n  _setFooter() {\n    let html = this._html;\n    let o = this._options;\n\n    if (o.footer && html.footer) {\n      if (o.footer.nodeName) {\n        html.footer.ineerHTML = o.footer.outerHTML;\n      } else if (typeof o.footer === 'string') {\n        html.footer.innerHTML = o.footer;\n      } else if (! html.footer.children.length) {\n        o.buttons.forEach((button) => {\n          let el = document.createElement('button');\n          data(el, 'button', button);\n          el.innerHTML = button.text;\n          el.setAttribute('type', 'button');\n          for (let j in button.attr) {\n            el.setAttribute(j, button.attr[j]);\n          }\n          html.footer.appendChild(el);\n        });\n      }\n      if (o.construct) {\n        html.content.appendChild(html.footer);\n      }\n    }\n\n  }\n\n  _setEvents() {\n    let o = this._options;\n    let html = this._html;\n\n    this._events.keydownHandler = this._handleKeydownEvent.bind(this);\n    document.body.addEventListener('keydown',\n      this._events.keydownHandler\n    );\n\n    this._events.mousedownHandler = this._handleMousedownEvent.bind(this);\n    html.container.addEventListener('mousedown',\n      this._events.mousedownHandler\n    );\n\n    this._events.clickHandler = this._handleClickEvent.bind(this);\n    html.container.addEventListener('click',\n      this._events.clickHandler\n    );\n\n    this._events.resizeHandler = this._handleResizeEvent.bind(this);\n    window.addEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _handleMousedownEvent(e) {\n    this._pointerInContent = false;\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.classList && node.classList.contains('modal-content')) {\n        this._pointerInContent = true;\n        return false;\n      }\n      return true;\n    });\n  }\n\n  _handleClickEvent(e) {\n    let path = getPath(e.target);\n    path.every(node => {\n      if (node.tagName === 'HTML') {\n        return false;\n      }\n      if (this._options.backdrop !== true && node.classList.contains('modal')) {\n        return false;\n      }\n      if (node.classList.contains('modal-content')) {\n        return false;\n      }\n      if (node.getAttribute('data-dismiss') === 'modal') {\n        this.emit('dismiss', this, e, data(e.target, 'button'));\n        this.hide();\n        return false;\n      }\n\n      if (!this._pointerInContent && node.classList.contains('modal')) {\n        this.emit('dismiss', this, e, null);\n        this.hide();\n        return false;\n      }\n      return true;\n    });\n\n    this._pointerInContent = false;\n  }\n\n  _handleKeydownEvent(e) {\n    if (e.which === 27 && this._options.keyboard) {\n      this.emit('dismiss', this, e, null);\n      this.hide();\n    }\n  }\n\n  _handleResizeEvent(e) {\n    this._resize();\n  }\n\n  show() {\n    let o = this._options;\n    let html = this._html;\n    this.emit('show', this);\n\n    this._checkScrollbar();\n    this._setScrollbar();\n    document.body.classList.add('modal-open');\n\n    if (o.construct) {\n      html.appendTo.appendChild(html.container);\n    }\n\n    html.container.style.display = 'block';\n    html.container.scrollTop = 0;\n\n    if (o.backdrop !== false) {\n      this.once('showBackdrop', () => {\n        this._setEvents();\n\n        if (o.animate) html.container.offsetWidth; // Force reflow\n\n        html.container.classList.add(o.animateInClass);\n\n        setTimeout(() => {\n          this._visible = true;\n          this.emit('shown', this);\n        }, o.transition);\n      });\n      this._backdrop();\n    } else {\n      this._setEvents();\n\n      if (o.animate) html.container.offsetWidth; // Force reflow\n\n      html.container.classList.add(o.animateInClass);\n\n      setTimeout(() => {\n        this._visible = true;\n        this.emit('shown', this);\n      }, o.transition);\n    }\n    this._resize();\n\n    return this;\n  }\n\n  toggle() {\n    if (this._visible) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  _resize() {\n    var modalIsOverflowing =\n      this._html.container.scrollHeight > document.documentElement.clientHeight;\n\n    this._html.container.style.paddingLeft =\n      ! this.bodyIsOverflowing && modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n\n    this._html.container.style.paddingRight =\n      this.bodyIsOverflowing && ! modalIsOverflowing ? this._scrollbarWidth + 'px' : '';\n  }\n\n  _backdrop() {\n    let html = this._html;\n    let t = this._templates;\n    let o = this._options;\n    let animate = o.animate ? o.animateClass : false;\n\n    html.backdrop = build(t.backdrop);\n    if (animate) html.backdrop.classList.add(animate);\n    html.appendTo.appendChild(html.backdrop);\n\n    if (animate) html.backdrop.offsetWidth;\n\n    html.backdrop.classList.add(o.animateInClass);\n\n    setTimeout(() => {\n      this.emit('showBackdrop', this);\n    }, this._options.backdropTransition);\n  }\n\n  hide() {\n    let html = this._html;\n    let o = this._options;\n    let contCList = html.container.classList;\n    this.emit('hide', this);\n\n    contCList.remove(o.animateInClass);\n\n    if (o.backdrop) {\n      let backCList = html.backdrop.classList;\n      backCList.remove(o.animateInClass);\n    }\n\n    this._removeEvents();\n\n    setTimeout(() => {\n      document.body.classList.remove('modal-open');\n      document.body.style.paddingRight = this.originalBodyPad;\n    }, o.backdropTransition);\n\n    setTimeout(() => {\n      if (o.backdrop) {\n        html.backdrop.parentNode.removeChild(html.backdrop);\n      }\n      html.container.style.display = 'none';\n\n      if (o.construct) {\n        html.container.parentNode.removeChild(html.container);\n      }\n\n      this._visible = false;\n      this.emit('hidden', this);\n    }, o.transition);\n\n    return this;\n  }\n\n  _removeEvents() {\n    if (this._events.keydownHandler) {\n      document.body.removeEventListener('keydown',\n        this._events.keydownHandler\n      );\n    }\n\n    this._html.container.removeEventListener('mousedown',\n      this._events.mousedownHandler\n    );\n\n    this._html.container.removeEventListener('click',\n      this._events.clickHandler\n    );\n\n    window.removeEventListener('resize',\n      this._events.resizeHandler\n    );\n  }\n\n  _checkScrollbar() {\n    this.bodyIsOverflowing = document.body.clientWidth < window.innerWidth;\n  }\n\n  _setScrollbar() {\n    this.originalBodyPad = document.body.style.paddingRight || '';\n    if (this.bodyIsOverflowing) {\n      let basePadding = parseInt(this.originalBodyPad || 0, 10);\n      document.body.style.paddingRight = basePadding + this._scrollbarWidth + 'px';\n    }\n  }\n}\n\nexport default Modal;\n","/**\r\n * @protected\r\n */\r\nexport const CLASS_PRINT_MODE = 'printMode';\r\nexport const CLASS_HIDE_CONTROLS = 'hideControls';\r\n","import Map from 'ol/Map.js';\r\nimport View from 'ol/View.js';\r\nimport Polygon from 'ol/geom/Polygon';\r\nimport Overlay from 'ol/Overlay';\r\nimport { Extent } from 'ol/extent';\r\n\r\nimport { I18n, Options } from '../ol-pdf-printer';\r\n\r\nimport { CLASS_HIDE_CONTROLS } from '../classnames';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\nimport rotateRight from '../assets/images/rotateRight.svg';\r\nimport rotateLeft from '../assets/images/rotateLeft.svg';\r\nimport zoomIn from '../assets/images/zoomIn.svg';\r\nimport zoomOut from '../assets/images/zoomOut.svg';\r\n\r\nconst CLASS_OVERLAY = 'opp-overlay-frame';\r\nconst CLASS_OVERLAY_RECTANGLE = CLASS_OVERLAY + '-rectangle';\r\nconst CLASS_OVERLAY_CONTROLS = CLASS_OVERLAY + '-controls';\r\nconst CLASS_OVERLAY_ZOOM_ENABLED = CLASS_OVERLAY + '-zoom-enabled';\r\nconst CLASS_OVERLAY_CANCEL_BTN = CLASS_OVERLAY + '-cancel-btn';\r\nconst CLASS_OVERLAY_SAVE_BTN = CLASS_OVERLAY + '-save-btn';\r\nconst CLASS_OVERLAY_REFRAME_HINT = CLASS_OVERLAY + '-reframe-hint';\r\n\r\nexport default class ReframeROI {\r\n    private _map: Map;\r\n    private _view: View;\r\n\r\n    private _callback: (extent: Extent | Polygon) => void;\r\n\r\n    private _escapeKeyListener: EventListener;\r\n    private _saveButton: HTMLButtonElement;\r\n    private _cancelButton: HTMLButtonElement;\r\n    private _rectangle: HTMLElement;\r\n    private _overlay: Overlay;\r\n    private _controlButtons: HTMLElement;\r\n\r\n    constructor(map: Map, i18n: I18n, options: Options) {\r\n        this._map = map;\r\n        this._view = this._map.getView();\r\n\r\n        this._saveButton = (\r\n            <button\r\n                type=\"button\"\r\n                className={`btn btn-lg btn-primary ${CLASS_OVERLAY_SAVE_BTN}`}\r\n            >\r\n                {i18n.process}\r\n            </button>\r\n        );\r\n\r\n        this._cancelButton = (\r\n            <button\r\n                type=\"button\"\r\n                className={`btn-close btn-close-white ${CLASS_OVERLAY_CANCEL_BTN}`}\r\n                onclick={() => this.hideOverlay()}\r\n                title={i18n.escapeHint}\r\n            >\r\n                <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n        );\r\n\r\n        this._controlButtons = <div className={CLASS_OVERLAY_CONTROLS}></div>;\r\n\r\n        if (options.zoomControlOnReframe) {\r\n            this._controlButtons.append(\r\n                <div className=\"opp-zoom ol-control ol-unselectable\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"opp-zoom-in\"\r\n                        onClick={() => this._zoom('in')}\r\n                        title={i18n.zoomIn}\r\n                    >\r\n                        {zoomIn()}\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"opp-zoom-out\"\r\n                        onClick={() => this._zoom('out')}\r\n                        title={i18n.zoomOut}\r\n                    >\r\n                        {zoomOut()}\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (options.rotationControlOnReframe) {\r\n            this._controlButtons.append(\r\n                <div className=\"opp-rotation ol-control ol-unselectable\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"opp-rotation-left\"\r\n                        onClick={() => this._rotate('left')}\r\n                        title={i18n.rotateLeft}\r\n                    >\r\n                        {rotateLeft()}\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"opp-rotation-right\"\r\n                        onClick={() => this._rotate('right')}\r\n                        title={i18n.rotateRight}\r\n                    >\r\n                        {rotateRight()}\r\n                    </button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        this._rectangle = (\r\n            <div\r\n                className={`${CLASS_OVERLAY_RECTANGLE} ${\r\n                    options.zoomControlOnReframe\r\n                        ? CLASS_OVERLAY_ZOOM_ENABLED\r\n                        : ''\r\n                }`}\r\n            >\r\n                {this._cancelButton}\r\n                <div>\r\n                    <div>{this._saveButton}</div>\r\n                    <div className={CLASS_OVERLAY_REFRAME_HINT}>\r\n                        {i18n.reframeHint}\r\n                    </div>\r\n                </div>\r\n                {(options.zoomControlOnReframe ||\r\n                    options.rotationControlOnReframe) &&\r\n                    this._controlButtons}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public showOverlay(\r\n        mode: 'landscape' | 'portrait',\r\n        callback: (polygon: Extent | Polygon) => void\r\n    ): void {\r\n        this._map.getTargetElement().classList.add(CLASS_HIDE_CONTROLS);\r\n\r\n        this._overlay = new Overlay({\r\n            className: `${CLASS_OVERLAY} ${mode}-mode`,\r\n            element: this._rectangle,\r\n            stopEvent: true\r\n        });\r\n\r\n        this._map.addOverlay(this._overlay);\r\n\r\n        this._view.setConstrainResolution(false);\r\n\r\n        this._addEvents();\r\n        this._callback = callback;\r\n\r\n        this._saveButton.onclick = () => {\r\n            callback(this._getExtent());\r\n            setTimeout(() => {\r\n                this.hideOverlay();\r\n            }, 10);\r\n        };\r\n    }\r\n\r\n    public hideOverlay(): void {\r\n        if (this._overlay) {\r\n            this._map.removeOverlay(this._overlay);\r\n        }\r\n        this._removeEvents();\r\n        this._map.getTargetElement().classList.remove(CLASS_HIDE_CONTROLS);\r\n\r\n        if (this._callback) {\r\n            this._callback(null);\r\n        }\r\n    }\r\n\r\n    private _zoom(direction: 'in' | 'out', delta = 0.5): void {\r\n        const rotate = 0.261799 * delta;\r\n        const dd = direction === 'in' ? '' : '-';\r\n        this._view.adjustZoom(Number(dd + rotate));\r\n    }\r\n\r\n    private _rotate(direction: 'left' | 'right', delta = 0.5): void {\r\n        const rotate = 0.261799 * delta;\r\n        const dd = direction === 'right' ? '' : '-';\r\n        this._view.adjustRotation(Number(dd + rotate));\r\n    }\r\n\r\n    private _getExtent(): Polygon {\r\n        const mapBounds = this._map.getTargetElement().getBoundingClientRect();\r\n\r\n        const overlayFrameBounds = this._rectangle.getBoundingClientRect();\r\n\r\n        const relativePosition = {\r\n            left: overlayFrameBounds.left - mapBounds.left,\r\n            top: overlayFrameBounds.top - mapBounds.top\r\n        };\r\n\r\n        const topLeft = this._map.getCoordinateFromPixel([\r\n            relativePosition.left,\r\n            relativePosition.top\r\n        ]);\r\n\r\n        const topRight = this._map.getCoordinateFromPixel([\r\n            relativePosition.left + overlayFrameBounds.width,\r\n            relativePosition.top\r\n        ]);\r\n\r\n        const bottomLeft = this._map.getCoordinateFromPixel([\r\n            relativePosition.left,\r\n            relativePosition.top + overlayFrameBounds.height\r\n        ]);\r\n\r\n        const bottomRight = this._map.getCoordinateFromPixel([\r\n            relativePosition.left + overlayFrameBounds.width,\r\n            relativePosition.top + overlayFrameBounds.height\r\n        ]);\r\n\r\n        return new Polygon([[topLeft, topRight, bottomRight, bottomLeft]]);\r\n    }\r\n\r\n    private _addEvents(): void {\r\n        const escapeKeyListener = ({ key }) => {\r\n            if (key === 'Escape') {\r\n                this.hideOverlay();\r\n            }\r\n        };\r\n\r\n        this._escapeKeyListener = escapeKeyListener.bind(this);\r\n        document.addEventListener('keydown', this._escapeKeyListener);\r\n    }\r\n\r\n    private _removeEvents = (): void => {\r\n        document.removeEventListener('keydown', this._escapeKeyListener);\r\n    };\r\n}\r\n","import Map from 'ol/Map.js';\r\nimport { Extent } from 'ol/extent';\r\nimport { Polygon } from 'ol/geom';\r\n\r\nimport Modal from 'modal-vanilla';\r\n\r\nimport ReframeROI from './ReframeROI';\r\n\r\nimport { I18n, IPrintOptions, Options } from '../ol-pdf-printer';\r\n\r\nimport myPragma from '../myPragma';\r\n\r\n/**\r\n * @private\r\n */\r\nexport default class SettingsModal {\r\n    protected _modal: Modal;\r\n    protected _reframeROI: ReframeROI;\r\n\r\n    constructor(\r\n        map: Map,\r\n        options: Options,\r\n        i18n: I18n,\r\n        printMap: (\r\n            values: IPrintOptions | false,\r\n            showLoading?: boolean,\r\n            delay?: number\r\n        ) => void\r\n    ) {\r\n        this._modal = new Modal({\r\n            headerClose: true,\r\n            header: true,\r\n            animate: true,\r\n            title: i18n.printPdf,\r\n            content: this.Content(i18n, options),\r\n            footer: this.Footer(i18n, options),\r\n            ...options.modal\r\n        });\r\n\r\n        if (options.allowReframeRegionOfInterest) {\r\n            this._reframeROI = new ReframeROI(map, i18n, options);\r\n        }\r\n\r\n        this._modal.el.classList.add('settingsModal');\r\n\r\n        this._modal.on('dismiss', (modal: Modal, event: Event): void => {\r\n            const print = (event.target as HTMLElement).dataset.print;\r\n            if (!print) return;\r\n\r\n            const form = document.getElementById('printMap') as HTMLFormElement;\r\n\r\n            const formData = new FormData(form);\r\n\r\n            const values: IPrintOptions = {\r\n                format: formData.get('printFormat') as string,\r\n                orientation: formData.get(\r\n                    'printOrientation'\r\n                ) as IPrintOptions['orientation'],\r\n                resolution: Number(formData.get('printResolution')),\r\n                description: formData.get('printDescription') as string,\r\n                compass: formData.get('printCompass') as unknown as boolean,\r\n                attributions: formData.get(\r\n                    'printAttributions'\r\n                ) as unknown as boolean,\r\n                scalebar: formData.get('printScalebar') as unknown as boolean,\r\n                legends: formData.get('printLegends') as unknown as boolean,\r\n                url: formData.get('printUrl') as unknown as boolean,\r\n                date: formData.get('printDate') as unknown as boolean,\r\n                specs: formData.get('printSpecs') as unknown as boolean,\r\n                safeMargins: formData.get('safeMargins') as unknown as boolean,\r\n                typeExport: this._modal.el.querySelector<HTMLSelectElement>(\r\n                    'select[name=\"printTypeExport\"]'\r\n                ).value\r\n            };\r\n\r\n            if (this._reframeROI) {\r\n                const callback = (extent: Extent | Polygon | false) => {\r\n                    if (extent) {\r\n                        printMap(\r\n                            { regionOfInterest: extent, ...values },\r\n                            /* showLoading */ true,\r\n                            /* delay */ options.modal.transition\r\n                        );\r\n                    } else {\r\n                        //cancel\r\n                        printMap(false);\r\n                    }\r\n                };\r\n                this._reframeROI.showOverlay(values.orientation, callback);\r\n            } else {\r\n                printMap(\r\n                    values,\r\n                    /* showLoading */ true,\r\n                    /* delay */ options.modal.transition\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param i18n\r\n     * @param options\r\n     * @returns\r\n     * @protected\r\n     */\r\n    Content(i18n: I18n, options: Options): HTMLElement {\r\n        const { dpi, mapElements, extraInfo, description, paperSizes } =\r\n            options;\r\n\r\n        return (\r\n            <form id=\"printMap\">\r\n                <section>\r\n                    <div className=\"printFields-container\">\r\n                        <div className=\"printField\">\r\n                            <label htmlFor=\"printFormat\">\r\n                                {i18n.paperSize}\r\n                            </label>\r\n                            <select name=\"printFormat\" id=\"printFormat\">\r\n                                {paperSizes.map((paper) => (\r\n                                    <option\r\n                                        value={paper.value}\r\n                                        {...(paper.selected\r\n                                            ? { selected: 'selected' }\r\n                                            : {})}\r\n                                    >\r\n                                        {paper.value}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"printField\">\r\n                            <label htmlFor=\"printOrientation\">\r\n                                {i18n.orientation}\r\n                            </label>\r\n                            <select\r\n                                name=\"printOrientation\"\r\n                                id=\"printOrientation\"\r\n                            >\r\n                                <option value=\"landscape\" selected>\r\n                                    {i18n.landscape}\r\n                                </option>\r\n                                <option value=\"portrait\">\r\n                                    {i18n.portrait}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"printField\">\r\n                            <label htmlFor=\"printResolution\">\r\n                                {i18n.resolution}\r\n                            </label>\r\n                            <select name=\"printResolution\" id=\"printResolution\">\r\n                                {dpi.map((d) => (\r\n                                    <option\r\n                                        value={d.value}\r\n                                        {...(d.selected\r\n                                            ? { selected: 'selected' }\r\n                                            : {})}\r\n                                    >\r\n                                        {d.value} dpi\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {description && (\r\n                            <div>\r\n                                <label htmlFor=\"printDescription\">\r\n                                    {i18n.addNote}\r\n                                </label>\r\n                                <textarea\r\n                                    id=\"printDescription\"\r\n                                    name=\"printDescription\"\r\n                                    rows=\"4\"\r\n                                ></textarea>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </section>\r\n                {mapElements && (\r\n                    <fieldset className=\"sectionChecks mapElements\">\r\n                        <legend>{i18n.mapElements}</legend>\r\n                        <div className=\"sectionChecksList\">\r\n                            {mapElements.compass && (\r\n                                <label htmlFor=\"printCompass\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printCompass\"\r\n                                        name=\"printCompass\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.compass}</span>\r\n                                </label>\r\n                            )}\r\n                            {mapElements.scalebar && (\r\n                                <label htmlFor=\"printScalebar\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printScalebar\"\r\n                                        name=\"printScalebar\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.scale}</span>\r\n                                </label>\r\n                            )}\r\n                            {mapElements.legends && (\r\n                                <label htmlFor=\"printLegends\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printLegends\"\r\n                                        name=\"printLegends\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.legends}</span>\r\n                                </label>\r\n                            )}\r\n                            {mapElements.attributions && (\r\n                                <label htmlFor=\"printAttributions\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printAttributions\"\r\n                                        name=\"printAttributions\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.layersAttributions}</span>\r\n                                </label>\r\n                            )}\r\n                        </div>\r\n                    </fieldset>\r\n                )}\r\n                {extraInfo && (\r\n                    <fieldset className=\"sectionChecks extraInfo\">\r\n                        <legend>{i18n.extraInfo}</legend>\r\n                        <div className=\"sectionChecksList\">\r\n                            {extraInfo.url && (\r\n                                <label htmlFor=\"printUrl\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printUrl\"\r\n                                        name=\"printUrl\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.url}</span>\r\n                                </label>\r\n                            )}\r\n                            {extraInfo.date && (\r\n                                <label htmlFor=\"printDate\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printDate\"\r\n                                        name=\"printDate\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.date}</span>\r\n                                </label>\r\n                            )}\r\n                            {extraInfo.specs && (\r\n                                <label htmlFor=\"printSpecs\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"printSpecs\"\r\n                                        name=\"printSpecs\"\r\n                                        checked\r\n                                    />\r\n                                    <span>{i18n.specs}</span>\r\n                                </label>\r\n                            )}\r\n                        </div>\r\n                    </fieldset>\r\n                )}\r\n                <div className=\"safeMarginsSection sectionChecks\">\r\n                    <label htmlFor=\"safeMargins\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"safeMargins\"\r\n                            name=\"safeMargins\"\r\n                        />\r\n                        <span> {i18n.printerMargins}</span>\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param i18n\r\n     * @returns\r\n     * @protected\r\n     */\r\n    Footer(i18n: I18n, options: Options): string {\r\n        const { mimeTypeExports } = options;\r\n\r\n        return (\r\n            <div>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-sm btn btn-secondary\"\r\n                    data-dismiss=\"modal\"\r\n                >\r\n                    {i18n.cancel}\r\n                </button>\r\n                <div class=\"typeExportContainer\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-sm btn btn-primary\"\r\n                        data-print=\"true\"\r\n                        data-dismiss=\"modal\"\r\n                    >\r\n                        {i18n.print}\r\n                    </button>\r\n                    <select\r\n                        className=\"typeExport\"\r\n                        name=\"printTypeExport\"\r\n                        id=\"printTypeExport\"\r\n                    >\r\n                        {mimeTypeExports.map((type) => (\r\n                            <option\r\n                                value={type.value}\r\n                                {...(type.selected\r\n                                    ? { selected: 'selected' }\r\n                                    : {})}\r\n                            >\r\n                                {type.value}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        ).outerHTML;\r\n    }\r\n\r\n    hide(): void {\r\n        this._modal.hide();\r\n    }\r\n\r\n    show(): void {\r\n        if (!this._modal._visible) this._modal.show();\r\n    }\r\n}\r\n","import Modal from 'modal-vanilla';\r\nimport { I18n, Options } from '../ol-pdf-printer';\r\n\r\n/**\r\n * @private\r\n */\r\nexport default class ProcessingModal {\r\n    protected _modal: Modal;\r\n    protected _footer: string;\r\n    protected _i18n: I18n;\r\n    protected _message: HTMLElement = document.createElement('div');\r\n    protected _loaderContainer: HTMLElement = document.createElement('div');\r\n\r\n    /**\r\n     *\r\n     * @param i18n\r\n     * @param options\r\n     * @param onEndPrint\r\n     * @protected\r\n     */\r\n    constructor(i18n: I18n, options: Options, onEndPrint: () => void) {\r\n        this._i18n = i18n;\r\n\r\n        this._modal = new Modal({\r\n            headerClose: false,\r\n            title: this._i18n.printing,\r\n            backdrop: 'static', // To prevent close on clicking backdrop\r\n            content: ' ',\r\n            footer: `\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn-sm btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n            >\r\n                ${this._i18n.cancel}\r\n            </button>\r\n            `,\r\n            ...options.modal\r\n        });\r\n\r\n        this._modal.el.classList.add('processingModal');\r\n\r\n        this._modal.once('shown', () => {\r\n            if (options.loader) {\r\n                this._loaderContainer.className = 'printLoader-container';\r\n                if (typeof options.loader === 'string') {\r\n                    this._loaderContainer.innerHTML = options.loader;\r\n                } else {\r\n                    this._loaderContainer.appendChild(options.loader);\r\n                }\r\n            }\r\n\r\n            this._modal._html.body.append(this._message);\r\n            this._modal._html.body.append(this._loaderContainer);\r\n        });\r\n\r\n        this._modal.on('dismiss', () => {\r\n            onEndPrint();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param string\r\n     * @protected\r\n     */\r\n    _setContentModal(string: string | number): void {\r\n        this._message.innerHTML = String(string);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param string\r\n     * @protected\r\n     */\r\n    _setFooterModal(string: string): void {\r\n        this._modal._html.footer.innerHTML = string;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param string\r\n     * @param footer\r\n     * @protected\r\n     */\r\n    show(): void {\r\n        this._modal.show();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param string\r\n     * @param footer\r\n     * @protected\r\n     */\r\n    set(string: string | number): void {\r\n        if (!this._modal._visible) return;\r\n        this._setContentModal(string);\r\n    }\r\n\r\n    setLoading(bool = true): void {\r\n        if (bool) {\r\n            this._modal.el.classList.add('showLoader');\r\n        } else {\r\n            this._modal.el.classList.remove('showLoader');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    hide(): void {\r\n        this._modal.hide();\r\n    }\r\n}\r\n","import Map from 'ol/Map.js';\r\nimport View from 'ol/View.js';\r\nimport Control, { Options as ControlOptions } from 'ol/control/Control.js';\r\nimport { getPointResolution } from 'ol/proj.js';\r\nimport { EventsKey } from 'ol/events.js';\r\nimport { unByKey } from 'ol/Observable.js';\r\nimport Cluster from 'ol/source/Cluster.js';\r\nimport VectorLayer from 'ol/layer/Vector.js';\r\nimport TileWMS from 'ol/source/TileWMS.js';\r\nimport { Extent } from 'ol/extent';\r\nimport { Coordinate } from 'ol/coordinate.js';\r\nimport Polygon from 'ol/geom/Polygon';\r\n\r\nimport { Locale } from 'locale-enum';\r\n\r\nimport Pdf from './components/Pdf';\r\nimport SettingsModal from './components/SettingsModal';\r\nimport ProcessingModal from './components/ProcessingModal';\r\nimport { LegendsOptions } from './components/MapElements/Legends';\r\nimport { getMapScale } from './components/Helpers';\r\nimport { defaultOptions, DEFAULT_LANGUAGE } from './defaults';\r\n\r\nimport { CLASS_HIDE_CONTROLS, CLASS_PRINT_MODE } from './classnames';\r\n\r\n/*eslint import/namespace: ['error', { allowComputed: true }]*/\r\nimport * as i18n from './components/i18n';\r\n\r\nimport pdfIcon from './assets/images/pdf.svg';\r\n\r\n// Style\r\nimport './assets/scss/-ol-pdf-printer.bootstrap5.scss';\r\nimport './assets/scss/ol-pdf-printer.scss';\r\n\r\n/**\r\n * @protected\r\n */\r\nfunction deepObjectAssign(target, ...sources) {\r\n    sources.forEach((source) => {\r\n        Object.keys(source).forEach((key) => {\r\n            const s_val = source[key];\r\n            const t_val = target[key];\r\n            target[key] =\r\n                t_val &&\r\n                s_val &&\r\n                typeof t_val === 'object' &&\r\n                typeof s_val === 'object' &&\r\n                !Array.isArray(t_val) // Don't merge arrays\r\n                    ? deepObjectAssign(t_val, s_val)\r\n                    : s_val;\r\n        });\r\n    });\r\n    return target;\r\n}\r\n\r\n/**\r\n * @constructor\r\n * @extends {ol/control/Control~Control}\r\n * @params options\r\n */\r\nexport default class PdfPrinter extends Control {\r\n    protected _i18n: I18n;\r\n\r\n    protected _map: Map;\r\n    protected _view: View;\r\n    protected _mapTarget: HTMLElement;\r\n\r\n    protected _pdf: Pdf;\r\n\r\n    protected _processingModal: ProcessingModal;\r\n    protected _settingsModal: SettingsModal;\r\n\r\n    protected _initialized: boolean;\r\n\r\n    protected _timeoutProcessing: ReturnType<typeof setTimeout>;\r\n\r\n    protected _initialViewResolution: number;\r\n    protected _initialViewCoords: Coordinate;\r\n    protected _initialConstrainRes: boolean;\r\n    protected _initialSize: number[];\r\n\r\n    protected _options: Options;\r\n\r\n    protected _renderCompleteKey: EventsKey | EventsKey[];\r\n\r\n    protected _isCanceled: boolean;\r\n    protected _eventsKey: EventsKey[];\r\n    protected _imageCount: number;\r\n\r\n    constructor(opt_options?: Options) {\r\n        const controlElement = document.createElement('button');\r\n\r\n        super({\r\n            target: opt_options.target,\r\n            element:\r\n                opt_options.showControlBtn === false\r\n                    ? document.createElement('div')\r\n                    : controlElement\r\n        });\r\n\r\n        // Check if the selected language exists\r\n        this._i18n =\r\n            opt_options.language && opt_options.language in i18n\r\n                ? i18n[opt_options.language]\r\n                : i18n[DEFAULT_LANGUAGE];\r\n\r\n        if (opt_options.i18n) {\r\n            // Merge custom translations\r\n            this._i18n = {\r\n                ...this._i18n,\r\n                ...opt_options.i18n\r\n            };\r\n        }\r\n\r\n        // Default options\r\n        this._options = defaultOptions(this._i18n);\r\n\r\n        // Merge options\r\n        this._options = deepObjectAssign(this._options, opt_options);\r\n\r\n        if (this._options.showControlBtn) {\r\n            controlElement.className = `ol-print-btn-menu ${this._options.ctrlBtnClass}`;\r\n            controlElement.title = this._i18n.printPdf;\r\n            controlElement.onclick = () => this.showPrintSettingsModal();\r\n            controlElement.append(pdfIcon());\r\n        }\r\n    }\r\n\r\n    public setMap(map: Map) {\r\n        super.setMap(map);\r\n        if (!this._initialized && map) this._init();\r\n        this._initialConstrainRes = this._view.getConstrainResolution();\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _init(): void {\r\n        this._map = this.getMap();\r\n        this._view = this._map.getView();\r\n        this._mapTarget = this._map.getTargetElement();\r\n        this._settingsModal = new SettingsModal(\r\n            this._map,\r\n            this._options,\r\n            this._i18n,\r\n            this._printMap.bind(this)\r\n        );\r\n\r\n        this._processingModal = new ProcessingModal(\r\n            this._i18n,\r\n            this._options,\r\n            this._onEndPrint.bind(this)\r\n        );\r\n\r\n        this._initialized = true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    protected _restoreConstrains(): void {\r\n        this._view.setConstrainResolution(this._initialConstrainRes);\r\n    }\r\n\r\n    /**\r\n     * Restore inital view, remove classes, disable loading\r\n     * @protected\r\n     */\r\n    protected _onEndPrint(): void {\r\n        this._map.setSize(this._initialSize);\r\n        this._view.setResolution(this._initialViewResolution);\r\n        this._view.setCenter(this._initialViewCoords);\r\n\r\n        this._restoreConstrains();\r\n\r\n        this._mapTarget.classList.remove(CLASS_PRINT_MODE, CLASS_HIDE_CONTROLS);\r\n\r\n        this._updateDPI(90);\r\n        this._removeListeners();\r\n\r\n        clearTimeout(this._timeoutProcessing);\r\n        this._processingModal.setLoading(false);\r\n\r\n        this._cancel();\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _prepareLoading(): void {\r\n        this._processingModal.show();\r\n        this._processingModal.setLoading(true);\r\n        this._processingModal.set(this._i18n.pleaseWait);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _disableLoading(): void {\r\n        this._processingModal.hide();\r\n        this._processingModal.setLoading(false);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param dpi\r\n     * @protected\r\n     */\r\n    protected _updateDPI(dpi = 90): void {\r\n        const pixelRatio = dpi / 90;\r\n\r\n        // @ts-expect-error There is no public method to do this\r\n        this._map.pixelRatio_ = pixelRatio;\r\n        this._map.getLayers().forEach((layer) => {\r\n            if (\r\n                layer.getVisible() &&\r\n                'getSource' in layer &&\r\n                typeof layer.getSource === 'function'\r\n            ) {\r\n                const source = layer.getSource() as TileWMS;\r\n\r\n                // @ts-expect-error There is no public method to do this\r\n                if (source.tilePixelRatio_ !== undefined) {\r\n                    // @ts-expect-error There is no public method to do this\r\n                    source.tilePixelRatio_ = pixelRatio;\r\n                    source.refresh();\r\n                } else {\r\n                    if (layer instanceof VectorLayer) {\r\n                        if (source instanceof Cluster) {\r\n                            source.getSource().changed();\r\n                        } else {\r\n                            source.changed();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._map.updateSize();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param form\r\n     * @param showLoading\r\n     * @param delay Delay to prevent glitching with modals animation\r\n     * @protected\r\n     */\r\n    protected _printMap(\r\n        form: IPrintOptions | false,\r\n        showLoading = true,\r\n        delay = 0\r\n    ): void {\r\n        // the print was canceled on the reframe instance\r\n        if (!form) {\r\n            return this._restoreConstrains();\r\n        }\r\n\r\n        if (showLoading) {\r\n            this._mapTarget.classList.add(\r\n                CLASS_PRINT_MODE,\r\n                CLASS_HIDE_CONTROLS\r\n            );\r\n        }\r\n\r\n        setTimeout(() => {\r\n            if (showLoading) {\r\n                this._prepareLoading();\r\n            }\r\n\r\n            this._isCanceled = false;\r\n\r\n            this._addDownloadCountListener();\r\n\r\n            // Save current resolution to restore it later\r\n            this._initialViewResolution = this._view.getResolution();\r\n            this._initialViewCoords = this._view.getCenter();\r\n            this._initialSize = this._map.getSize();\r\n\r\n            // To allow intermediate zoom levels\r\n            this._view.setConstrainResolution(false);\r\n\r\n            let dim = this._options.paperSizes.find(\r\n                (e) => e.value === form.format\r\n            ).size;\r\n\r\n            dim =\r\n                form.orientation === 'landscape'\r\n                    ? dim\r\n                    : ([...dim].reverse() as [number, number]);\r\n\r\n            const widthPaper = dim[0];\r\n            const heightPaper = dim[1];\r\n\r\n            this._updateDPI(form.resolution);\r\n\r\n            const pixelsPerMapMillimeter = form.resolution / 25.4;\r\n\r\n            const width = Math.round(widthPaper * pixelsPerMapMillimeter);\r\n            const height = Math.round(heightPaper * pixelsPerMapMillimeter);\r\n\r\n            const scale =\r\n                form.scale && !form.regionOfInterest\r\n                    ? form.scale\r\n                    : getMapScale(this._map) / 1000;\r\n\r\n            const scaleResolution =\r\n                scale /\r\n                getPointResolution(\r\n                    this._view.getProjection(),\r\n                    pixelsPerMapMillimeter,\r\n                    this._view.getCenter()\r\n                );\r\n\r\n            this._renderCompleteKey = this._map.once(\r\n                'rendercomplete',\r\n                async () => {\r\n                    try {\r\n                        const mapCanvas = document.createElement('canvas');\r\n                        mapCanvas.width = width;\r\n                        mapCanvas.height = height;\r\n                        const mapContext = mapCanvas.getContext('2d');\r\n                        Array.prototype.forEach.call(\r\n                            document.querySelectorAll('.ol-layer canvas'),\r\n                            function (canvas: HTMLCanvasElement) {\r\n                                if (canvas.width > 0) {\r\n                                    const opacity = (\r\n                                        canvas.parentNode as HTMLElement\r\n                                    ).style.opacity;\r\n                                    mapContext.globalAlpha =\r\n                                        opacity === '' ? 1 : Number(opacity);\r\n                                    const transform = canvas.style.transform;\r\n                                    // Get the transform parameters from the style's transform matrix\r\n                                    const matrix = transform\r\n                                        .match(/^matrix\\(([^(]*)\\)$/)[1]\r\n                                        .split(',')\r\n                                        .map(Number);\r\n                                    // Apply the transform to the export map context\r\n                                    CanvasRenderingContext2D.prototype.setTransform.apply(\r\n                                        mapContext,\r\n                                        matrix\r\n                                    );\r\n                                    mapContext.drawImage(canvas, 0, 0);\r\n                                }\r\n                            }\r\n                        );\r\n                        mapContext.globalAlpha = 1;\r\n                        mapContext.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n                        this._processingModal.set(this._i18n.downloadFinished);\r\n\r\n                        if (this._isCanceled) return;\r\n\r\n                        this._pdf = new Pdf({\r\n                            form,\r\n                            scaleResolution,\r\n                            map: this._map,\r\n                            i18n: this._i18n,\r\n                            config: this._options,\r\n                            height: heightPaper,\r\n                            width: widthPaper\r\n                        });\r\n\r\n                        this._pdf.addMapImage(\r\n                            mapCanvas.toDataURL('image/jpeg')\r\n                        );\r\n\r\n                        await this._pdf.addMapHelpers();\r\n\r\n                        if (this._isCanceled) return;\r\n\r\n                        await this._pdf.savePdf();\r\n\r\n                        // Reset original map size\r\n                        this._onEndPrint();\r\n\r\n                        if (showLoading) this._disableLoading();\r\n                    } catch (err) {\r\n                        const message =\r\n                            typeof err === 'string' ? err : this._i18n.error;\r\n                        console.error(err);\r\n                        this._onEndPrint();\r\n                        this._processingModal.set(message);\r\n                    }\r\n                }\r\n            );\r\n\r\n            this._map.setSize([width, height]);\r\n            this._map.getView().setResolution(scaleResolution);\r\n\r\n            if (form.regionOfInterest) {\r\n                this._view.fit(form.regionOfInterest, {\r\n                    size: this._map.getSize(),\r\n                    nearest: false\r\n                });\r\n            }\r\n        }, delay);\r\n    }\r\n\r\n    /**\r\n     * Add tile listener to show downloaded images count\r\n     */\r\n    protected _addDownloadCountListener() {\r\n        const increaseCount = () => {\r\n            this._imageCount = this._imageCount + 1;\r\n            if (this._imageCount % 10 == 0) {\r\n                this._processingModal.set(\r\n                    this._i18n.downloadingImages +\r\n                        ': <b>' +\r\n                        this._imageCount +\r\n                        '</b>'\r\n                );\r\n            }\r\n        };\r\n\r\n        this._eventsKey = [];\r\n        this._imageCount = 0;\r\n\r\n        this._map\r\n            .getLayers()\r\n            .getArray()\r\n            .forEach((l) => {\r\n                if ('getSource' in l && typeof l.getSource === 'function') {\r\n                    this._eventsKey.push(\r\n                        l.getSource().on('tileloadend', () => increaseCount())\r\n                    );\r\n                    this._eventsKey.push(\r\n                        l.getSource().on('imageloadend', () => increaseCount())\r\n                    );\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Remove WMS listeners\r\n     */\r\n    protected _removeListeners() {\r\n        unByKey(this._eventsKey);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    protected _cancel(): void {\r\n        if (this._renderCompleteKey) {\r\n            unByKey(this._renderCompleteKey);\r\n        }\r\n\r\n        this._isCanceled = true;\r\n    }\r\n\r\n    /**\r\n     * Show the Settings Modal\r\n     * @public\r\n     */\r\n    showPrintSettingsModal(): void {\r\n        this._settingsModal.show();\r\n    }\r\n\r\n    /**\r\n     * Hide the Settings Modal\r\n     * @public\r\n     */\r\n    hidePrintSettingsModal(): void {\r\n        this._settingsModal.hide();\r\n    }\r\n\r\n    /**\r\n     * Create PDF programatically without displaying the Settings Modal\r\n     * @param options\r\n     * @public\r\n     */\r\n    createPdf(options: IPrintOptions, showLoading: boolean): void {\r\n        options = {};\r\n        this._printMap(\r\n            {\r\n                format: (\r\n                    this._options.paperSizes.find((p) => p.selected) ||\r\n                    this._options.paperSizes[0]\r\n                ).value,\r\n                resolution: (\r\n                    this._options.dpi.find((p) => p.selected) ||\r\n                    this._options.dpi[0]\r\n                ).value,\r\n                orientation: 'landscape',\r\n                compass: true,\r\n                attributions: true,\r\n                scalebar: true,\r\n                legends: true,\r\n                regionOfInterest: null,\r\n                typeExport: 'pdf',\r\n                ...options\r\n            },\r\n            showLoading\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * **_[enum]_**\r\n */\r\nexport enum UnitsSystem {\r\n    Metric = 'metric',\r\n    Imperial = 'imperial'\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\nexport interface IPrintOptions {\r\n    /**\r\n     *\r\n     */\r\n    format?: IPaperSize['value'];\r\n    /**\r\n     *\r\n     */\r\n    orientation?: 'landscape' | 'portrait';\r\n    /**\r\n     *\r\n     */\r\n    resolution?: IDpi['value'];\r\n    /**\r\n     *\r\n     */\r\n    scale?: number;\r\n\r\n    /**\r\n     * Area of interest. If this is provided,\r\n     * the scale value is not used\r\n     */\r\n    regionOfInterest?: Extent | Polygon;\r\n\r\n    /**\r\n     *\r\n     */\r\n    description?: string;\r\n    /**\r\n     *\r\n     */\r\n    compass?: boolean;\r\n    /**\r\n     *\r\n     */\r\n    attributions?: boolean;\r\n    /**\r\n     *\r\n     */\r\n    scalebar?: boolean;\r\n    /**\r\n     *\r\n     */\r\n    legends?: LegendsOptions | boolean;\r\n    /**\r\n     *\r\n     */\r\n    safeMargins?: boolean;\r\n    /**\r\n     *\r\n     */\r\n    typeExport?: IMimeTypeExport['value'];\r\n    /**\r\n     *\r\n     */\r\n    url?: boolean;\r\n    /**\r\n     *\r\n     */\r\n    date?: boolean;\r\n    /**\r\n     *\r\n     */\r\n    specs?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Custom translations specified when creating an instance\r\n */\r\nexport interface I18n {\r\n    printPdf: string;\r\n    pleaseWait: string;\r\n    downloadFinished: string;\r\n    downloadingImages: string;\r\n    error: string;\r\n    errorImage: string;\r\n    printing: string;\r\n    cancel: string;\r\n    close: string;\r\n    print: string;\r\n    mapElements: string;\r\n    extraInfo: string;\r\n    url: string;\r\n    date: string;\r\n    specs: string;\r\n    compass: string;\r\n    scale: string;\r\n    legends: string;\r\n    layersAttributions: string;\r\n    addNote: string;\r\n    resolution: string;\r\n    orientation: string;\r\n    paperSize: string;\r\n    landscape: string;\r\n    portrait: string;\r\n    current: string;\r\n    paper: string;\r\n    printerMargins: string;\r\n    escapeHint: string;\r\n    reframeHint: string;\r\n    process?: string;\r\n    zoomIn?: string;\r\n    zoomOut?: string;\r\n    rotateLeft?: string;\r\n    rotateRight?: string;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\ninterface IPaperSize {\r\n    /**\r\n     *\r\n     */\r\n    size: [number, number];\r\n    /**\r\n     *\r\n     */\r\n    value: string;\r\n    /**\r\n     *\r\n     */\r\n    selected?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\ninterface IDpi {\r\n    /**\r\n     *\r\n     */\r\n    value: number;\r\n    /**\r\n     *\r\n     */\r\n    selected?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\ninterface IStyle {\r\n    /**\r\n     * Only added if `Add printer margins` is checked\r\n     */\r\n    paperMargin?:\r\n        | number\r\n        | {\r\n              top: number;\r\n              right: number;\r\n              bottom: number;\r\n              left: number;\r\n          };\r\n\r\n    watermark?: {\r\n        /**\r\n         * Watermark border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Watermark background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Watermark title color\r\n         */\r\n        txcolortitle?: string;\r\n\r\n        /**\r\n         * Watermark subtitle color\r\n         */\r\n        txcolorsubtitle?: string;\r\n    };\r\n\r\n    url?: {\r\n        /**\r\n         * Url border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Url background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Url text color\r\n         */\r\n        txcolor?: string;\r\n    };\r\n\r\n    attributions?: {\r\n        /**\r\n         * Attributions border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Attributions background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Attributions text color\r\n         */\r\n        txcolor?: string;\r\n\r\n        /**\r\n         * Attributions links color\r\n         */\r\n        txcolorlink?: string;\r\n    };\r\n\r\n    scalebar?: {\r\n        /**\r\n         * Scalebar border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Scalebar background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Scalebar text and graph color\r\n         */\r\n        txcolor?: string;\r\n    };\r\n\r\n    specs?: {\r\n        /**\r\n         * Specs border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Specs background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Specs text color\r\n         */\r\n        txcolor?: string;\r\n    };\r\n\r\n    legends?: {\r\n        /**\r\n         * Legends border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Legends background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Legends text color\r\n         */\r\n        txcolor?: string;\r\n    };\r\n\r\n    description?: {\r\n        /**\r\n         * Description border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Description background color\r\n         */\r\n        bkcolor?: string;\r\n\r\n        /**\r\n         * Description text color\r\n         */\r\n        txcolor?: string;\r\n    };\r\n\r\n    compass?: {\r\n        /**\r\n         * Compass border color\r\n         */\r\n        brcolor?: string;\r\n\r\n        /**\r\n         * Compass background color\r\n         */\r\n        bkcolor?: string;\r\n    };\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\ninterface IMimeTypeExport {\r\n    value: 'pdf' | 'png' | 'jpeg' | 'webp';\r\n    selected?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\ninterface IModal {\r\n    /**\r\n     *\r\n     */\r\n    animateClass?: string;\r\n    /**\r\n     *\r\n     */\r\n    animateInClass?: string;\r\n    /**\r\n     *\r\n     */\r\n    transition?: number;\r\n    /**\r\n     *\r\n     */\r\n    backdropTransition?: number;\r\n    /**\r\n     *\r\n     */\r\n    templates?: {\r\n        dialog?: string | HTMLElement;\r\n        headerClose?: string | HTMLElement;\r\n    };\r\n}\r\n\r\n/**\r\n * **_[interface]_**\r\n */\r\nexport interface IWatermark {\r\n    /**\r\n     * Check style section to change the color\r\n     */\r\n    title?: string;\r\n\r\n    /**\r\n     * Check style section to change the color\r\n     */\r\n    subtitle?: string;\r\n\r\n    /**\r\n     * Display a small logo next to the title\r\n     * Uns PNG format if you provide a base64 string\r\n     */\r\n    logo?: false | string | HTMLImageElement | SVGElement;\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Print information at the bottom of the PDF\r\n */\r\nexport interface IExtraInfo {\r\n    /**\r\n     * Print Date\r\n     */\r\n    date?: boolean;\r\n    /**\r\n     * Current site url\r\n     */\r\n    url?: boolean;\r\n    /**\r\n     * DPI, Format and Scale information\r\n     */\r\n    specs?: boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_** - MapElements\r\n * @public\r\n */\r\nexport interface IMapElements {\r\n    /**\r\n     * Layers attributions\r\n     */\r\n    attributions?: boolean;\r\n    /**\r\n     * Scalebar\r\n     */\r\n    scalebar?: boolean;\r\n    /**\r\n     * Compass image. North must be pointing to the top\r\n     */\r\n    compass?: false | string | HTMLImageElement | SVGElement;\r\n    /**\r\n     * Display WMS legends\r\n     */\r\n    legends?: LegendsOptions | boolean;\r\n}\r\n\r\n/**\r\n * **_[interface]_** - Options specified when creating an instance\r\n */\r\nexport interface Options extends ControlOptions {\r\n    /**\r\n     * Export filename\r\n     */\r\n    filename?: string;\r\n\r\n    /**\r\n     * Map unit mode\r\n     */\r\n    units?: UnitsSystem;\r\n\r\n    /**\r\n     * Allow to reframe a precise Region of Interest before exporting\r\n     */\r\n    allowReframeRegionOfInterest?: boolean;\r\n\r\n    /**\r\n     * Show zoom control when the reframe insatnce is active\r\n     */\r\n    zoomControlOnReframe?: boolean;\r\n\r\n    /**\r\n     * Show rotation control when the reframe insatnce is active\r\n     */\r\n    rotationControlOnReframe?: boolean;\r\n\r\n    /**\r\n     * Some basic PDF style configuration\r\n     */\r\n    style?: IStyle;\r\n\r\n    /**\r\n     * Information to be inserted at the bottom of the PDF\r\n     * False to disable\r\n     */\r\n    extraInfo?: false | IExtraInfo;\r\n\r\n    /**\r\n     * Allow add extra description to the print\r\n     * False to disable\r\n     */\r\n    description?: boolean;\r\n\r\n    /**\r\n     * Elements to be showed on the PDF and in the Settings Modal.\r\n     * False to disable\r\n     */\r\n    mapElements?: false | IMapElements;\r\n\r\n    /**\r\n     * Watermark to be inserted in the PDF.\r\n     * False to disable\r\n     */\r\n    watermark?: false | IWatermark;\r\n\r\n    /**\r\n     * Paper sizes options to be shown in the settings modal\r\n     */\r\n    paperSizes?: IPaperSize[];\r\n\r\n    /**\r\n     * DPI resolutions options to be shown in the settings modal\r\n     */\r\n    dpi?: IDpi[];\r\n\r\n    /**\r\n     * Export format\r\n     */\r\n    mimeTypeExports?: IMimeTypeExport[];\r\n\r\n    /**\r\n     * Locale time zone. Default varies according to browser locale\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleDateString#using_locales\r\n     */\r\n    dateFormat?: Locale;\r\n\r\n    /**\r\n     * Show the Btn toggler on the map\r\n     */\r\n    showControlBtn?: boolean;\r\n\r\n    /**\r\n     * ClassName to add to the Btn Control\r\n     */\r\n    ctrlBtnClass?: string;\r\n\r\n    /**\r\n     * Modal configuration\r\n     */\r\n    modal?: IModal;\r\n\r\n    /**\r\n     * Element to be displayed while processing in the modal\r\n     */\r\n    loader?: HTMLElement | string | false;\r\n\r\n    /**\r\n     * Language support\r\n     */\r\n    language?: 'es' | 'en';\r\n\r\n    /**\r\n     * Add custom translations\r\n     */\r\n    i18n?: I18n;\r\n}\r\n","import { I18n } from '../../ol-pdf-printer';\r\n\r\nexport const en: I18n = {\r\n    printPdf: 'Print PDF',\r\n    pleaseWait: 'Please wait...',\r\n    downloadFinished: 'Download finished, processing...',\r\n    downloadingImages: 'Downloading images',\r\n    error: 'An error occurred while printing',\r\n    errorImage: 'An error ocurred while loading an image',\r\n    printing: 'Exporting',\r\n    cancel: 'Cancel',\r\n    close: 'Close',\r\n    print: 'Export',\r\n    mapElements: 'Map elements',\r\n    extraInfo: 'Extra information',\r\n    url: 'URL',\r\n    date: 'Date',\r\n    specs: 'Specifications',\r\n    compass: 'Compass',\r\n    scale: 'Scale',\r\n    legends: 'Legends',\r\n    layersAttributions: 'Layer attributions',\r\n    addNote: 'Add note',\r\n    resolution: 'Resolution',\r\n    orientation: 'Orientation',\r\n    paperSize: 'Paper size',\r\n    landscape: 'Landscape',\r\n    portrait: 'Portrait',\r\n    current: 'Current',\r\n    paper: 'Paper',\r\n    printerMargins: 'Add printer margins',\r\n    escapeHint: 'Press here or Escape to cancel',\r\n    reframeHint: 'Pan and zoom to adjust the print area',\r\n    process: 'Process',\r\n    zoomIn: 'Zoom in',\r\n    zoomOut: 'Zoom out',\r\n    rotateLeft: 'Rotate left',\r\n    rotateRight: 'Rotate right'\r\n};\r\n","import { I18n } from '../../ol-pdf-printer';\r\n\r\nexport const es: I18n = {\r\n    printPdf: 'Exportar PDF',\r\n    pleaseWait: 'Por favor espere...',\r\n    downloadFinished: 'Descarga completada, procesando...',\r\n    downloadingImages: 'Descargando imágenes',\r\n    error: 'Error al generar pdf',\r\n    errorImage: 'Ocurrió un error al tratar de cargar una imagen',\r\n    printing: 'Exportando',\r\n    cancel: 'Cancelar',\r\n    close: 'Cerrar',\r\n    print: 'Exportar',\r\n    mapElements: 'Elementos en el mapa',\r\n    extraInfo: 'Información adicional',\r\n    url: 'URL',\r\n    date: 'Fecha',\r\n    specs: 'Especificaciones',\r\n    compass: 'Brújula',\r\n    scale: 'Escala',\r\n    legends: 'Leyendas',\r\n    layersAttributions: 'Atribuciones de capas',\r\n    addNote: 'Agregar nota',\r\n    resolution: 'Resolución',\r\n    orientation: 'Orientación',\r\n    paperSize: 'Tamaño de página',\r\n    landscape: 'Paisaje',\r\n    portrait: 'Retrato',\r\n    current: 'Actual',\r\n    paper: 'Hoja',\r\n    printerMargins: 'Añadir márgenes de impresión',\r\n    escapeHint: 'Presioná aquí o Escape para cancelar',\r\n    reframeHint: 'Paneá y zoomeá para ajustar el área de impresión',\r\n    process: 'Procesar',\r\n    zoomIn: 'Acercar',\r\n    zoomOut: ' Alejar',\r\n    rotateLeft: 'Rotatar a la izquierda',\r\n    rotateRight: 'Rotate a la derecha'\r\n};\r\n","import compassIcon from './assets/images/compass.svg';\r\nimport { I18n, Options, UnitsSystem } from './ol-pdf-printer';\r\n\r\nexport const DEFAULT_LANGUAGE = 'en';\r\n\r\nexport const defaultOptions = (i18n: I18n): Options => ({\r\n    language: DEFAULT_LANGUAGE,\r\n    filename: 'Ol Pdf Printer',\r\n    allowReframeRegionOfInterest: true,\r\n    zoomControlOnReframe: true,\r\n    rotationControlOnReframe: true,\r\n    style: {\r\n        paperMargin: {\r\n            left: 4,\r\n            top: 4,\r\n            right: 4,\r\n            bottom: 4\r\n        },\r\n        watermark: {\r\n            brcolor: '#000000',\r\n            bkcolor: '#ffffff',\r\n            txcolortitle: '#d54b4b',\r\n            txcolorsubtitle: '#444444'\r\n        },\r\n        url: {\r\n            brcolor: '#000000',\r\n            bkcolor: '#ffffff',\r\n            txcolor: '#0077cc'\r\n        },\r\n        specs: {\r\n            brcolor: '#000000',\r\n            bkcolor: '#ffffff',\r\n            txcolor: '#000000'\r\n        },\r\n        scalebar: {\r\n            brcolor: '#000000',\r\n            bkcolor: '#ffffff',\r\n            txcolor: '#000000'\r\n        },\r\n        attributions: {\r\n            brcolor: '#ffffff',\r\n            bkcolor: '#ffffff',\r\n            txcolor: '#666666',\r\n            txcolorlink: '#0077cc'\r\n        },\r\n        legends: {\r\n            brcolor: '#000000',\r\n            bkcolor: '#ffffff',\r\n            txcolor: '#000000'\r\n        },\r\n        description: {\r\n            brcolor: '#333333',\r\n            bkcolor: '#333333',\r\n            txcolor: '#ffffff'\r\n        },\r\n        compass: {\r\n            brcolor: '#000000',\r\n            bkcolor: '#333333'\r\n        }\r\n    },\r\n    extraInfo: {\r\n        date: true,\r\n        url: true,\r\n        specs: true\r\n    },\r\n    description: true,\r\n    mapElements: {\r\n        attributions: true,\r\n        scalebar: true,\r\n        legends: true,\r\n        compass: compassIcon() as SVGElement\r\n    },\r\n    watermark: {\r\n        title: 'Ol Pdf Printer',\r\n        subtitle: 'https://github.com/GastonZalba/ol-pdf-printer',\r\n        logo: false\r\n    },\r\n    paperSizes: [\r\n        // { size: [1189, 841], value: 'A0' },\r\n        // { size: [841, 594], value: 'A1' },\r\n        { size: [594, 420], value: 'A2' },\r\n        { size: [420, 297], value: 'A3' },\r\n        { size: [297, 210], value: 'A4', selected: true },\r\n        { size: [210, 148], value: 'A5' }\r\n    ],\r\n    dpi: [\r\n        { value: 96 },\r\n        { value: 150, selected: true },\r\n        { value: 200 },\r\n        { value: 300 }\r\n    ],\r\n    mimeTypeExports: [\r\n        { value: 'pdf', selected: true },\r\n        { value: 'png' },\r\n        { value: 'jpeg' },\r\n        { value: 'webp' }\r\n    ],\r\n    units: UnitsSystem.Metric,\r\n    dateFormat: undefined,\r\n    showControlBtn: true,\r\n    ctrlBtnClass: '',\r\n    loader: '<span class=\"printLoader\"></span>',\r\n    modal: {\r\n        animateClass: 'fade',\r\n        animateInClass: 'show',\r\n        transition: 150,\r\n        backdropTransition: 0,\r\n        templates: {\r\n            dialog: '<div class=\"modal-dialog modal-dialog-centered\"></div>',\r\n            headerClose: `<button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"${i18n.close}\"><span aria-hidden=\"true\">×</span></button>`\r\n        }\r\n    }\r\n});\r\n","import PdfPrinter from './ol-pdf-printer';\r\nimport * as utils from './ol-pdf-printer';\r\n\r\n// make enums and other methods accesible\r\nObject.assign(PdfPrinter, utils);\r\nexport default PdfPrinter;\r\n"],"names":["legendsDefaultConfig","fontAntiAliasing","fontColor","bgColor","forceLabels","forceTitles","fontSize","Legends","constructor","options","map","this","_legendOptions","_requestParams","_map","_view","getView","_order","legendOptions","requestParams","order","Object","assign","getImages","dpi","txcolor","bkcolor","images","wmsLayers","getWmsLegendLayers","replace","wmsLayer","image","_getLegends","push","length","_orderImagesByIndex","getLayers","getArray","filter","layer","ImageLayer","TileLayer","getSource","TileWMS","ImageWMS","isWmsLayer","getVisible","getMapProjection","getProjection","getViewExtent","calculateExtent","getSize","Promise","resolve","srcs","_getSrcFromParams","forEach","src","img","Image","dataset","index","String","getZIndex","onerror","onload","naturalHeight","sourceParams","getParams","proj","getCode","params","SERVICE","VERSION","REQUEST","FORMAT","LEGEND_OPTIONS","entries","a","join","STYLE","STYLES","CQL_FILTER","SLD_BODY","SLD","ENV","SRS","SRCWIDTH","SRCHEIGHT","SCALE","_getScale","layersName","LAYERS","layerNames","Array","isArray","split","_getLegendUrl","LAYER","source","url","getUrls","getUrl","undefined","appendParams","from","sort","x","y","xIndex","Number","yIndex","reverse","getResolution","getMetersPerUnit","createElement","tagName","attrs","children","elem","DocumentFragment","document","name","value","startsWith","toLowerCase","window","addEventListener","substr","setAttribute","toString","child","append","nodeType","innerHTML","appendChild","Pdf","_accumulativeOffsetBottomLeft","addMapHelpers","async","mapElements","extraInfo","description","watermark","_config","_addWatermark","_form","_addDescription","_addExtraInfo","compass","_addCompass","scalebar","_addScaleBar","attributions","_addAttributions","legends","_addLegends","safeMargins","_fllWhite","_processSvgImage","svg","reject","getSvgUrl","data","XMLSerializer","serializeToString","URL","createObjectURL","Blob","type","svgUrlToPng","svgUrl","callback","svgImage","body","err","console","error","_i18n","errorImage","canvas","width","clientWidth","height","clientHeight","getContext","drawImage","imgData","toDataURL","removeChild","revokeObjectURL","svgToPng","_calculateOffsetByPosition","position","offset","size","_printingMargins","left","top","_pdf","bottom","_addRoundedBox","brcolor","doc","setDrawColor","setFillColor","roundedRect","_addText","color","align","str","setTextColor","setFontSize","text","_addTextByOffset","fixX","trim","date","specs","_style","w","h","getTextDimensions","maxWidth","paddingBack","getImageElement","SVGElement","logoImage","logoSizeWidth","fontSizeSubtitle","back","marginRight","backBoxHeight","titleYPosition","subtitleYPosition","logoSpace","logo","title","subtitle","txcolortitle","setFont","wSub","widthBack","txcolorsubtitle","addImage","_addUrl","_addSpecsAndDate","scale","_scaleDenominator","toLocaleString","paper","format","toUpperCase","resolution","_getDate","location","href","Date","now","toLocaleDateString","dateFormat","flatMap","l","attr","getAttributions","attributionsList","Set","myPragma","ATTRI_SEPATATOR","xPos","attributionsText","textContent","whiteSpaceWidth","attribution","childNodes","node","content","txcolorlink","textWithLink","log10","Math","log","LOG10E","unit","unitConversionFactor","maxLength","units","metre","inch","mile","yard","unroundedLength","numberOfDigits","floor","factor","pow","mapped","percentageMargin","right","fullSize","scaleBarX","scaleBarY","rect","round","imgSrc","rotationRadians","getRotation","imageSize","addRotation","context","translate","rotate","xCircle","yCircle","circle","rotatedCanvas","xImage","yImage","sizeImage","form","i18n","config","scaleResolution","style","paperMargin","create","orientation","_calculateScaleDenominator","_legends","_a","jspdf","jsPDF","addMapImage","dataUrl","savePdf","typeExport","save","filename","pdf","output","versionPdfJS","pdfjsLib","version","GlobalWorkerOptions","workerSrc","getDocument","promise","then","getPage","page","viewport","getViewport","display","render","canvasContext","uri","link","download","click","downloadURI","remove","pixelsPerMapMillimeter","_getMeterPerPixel","getPointResolution","getCenter","yPos","ratioSize","largestWidth","max","i","naturalWidth","accumulativeHeight","reduce","acc","curr","_factory","_defaults","freeze","el","animate","animateClass","animateInClass","appendTo","backdrop","keyboard","header","footer","buttons","headerClose","construct","transition","backdropTransition","_buttons","deepFreeze","obj","k","v","dialog","class","alert","confirm","_templates","container","prop","prefix","elData","dataAttr","getAttribute","build","html","all","nodeName","getPath","nodes","parentNode","Modal","EventEmitter","templates","_baseTemplates","_baseButtons","_baseOptions","message","_options","question","super","id","random","_html","_events","_visible","_pointerInContent","querySelector","_scrollbarWidth","inner","outerWidth","outer","visibility","offsetWidth","overflow","calcScrollbarWidth","Error","_render","_mapDom","o","t","classList","add","_setHeader","_setContent","_setFooter","contains","outerHTML","ineerHTML","button","j","_setEvents","keydownHandler","_handleKeydownEvent","bind","mousedownHandler","_handleMousedownEvent","clickHandler","_handleClickEvent","resizeHandler","_handleResizeEvent","e","target","every","emit","hide","which","_resize","show","_checkScrollbar","_setScrollbar","scrollTop","once","setTimeout","_backdrop","toggle","modalIsOverflowing","scrollHeight","documentElement","paddingLeft","bodyIsOverflowing","paddingRight","contCList","_removeEvents","originalBodyPad","removeEventListener","innerWidth","basePadding","parseInt","CLASS_PRINT_MODE","CLASS_HIDE_CONTROLS","CLASS_OVERLAY","CLASS_OVERLAY_RECTANGLE","CLASS_OVERLAY_CONTROLS","CLASS_OVERLAY_ZOOM_ENABLED","CLASS_OVERLAY_CANCEL_BTN","CLASS_OVERLAY_SAVE_BTN","CLASS_OVERLAY_REFRAME_HINT","ReframeROI","_escapeKeyListener","_saveButton","className","process","_cancelButton","onclick","hideOverlay","escapeHint","_controlButtons","zoomControlOnReframe","onClick","_zoom","zoomIn","zoomOut","rotationControlOnReframe","_rotate","rotateLeft","rotateRight","_rectangle","reframeHint","showOverlay","mode","getTargetElement","_overlay","Overlay","element","stopEvent","addOverlay","setConstrainResolution","_addEvents","_callback","_getExtent","removeOverlay","direction","delta","dd","adjustZoom","adjustRotation","mapBounds","getBoundingClientRect","overlayFrameBounds","relativePosition","topLeft","getCoordinateFromPixel","topRight","bottomLeft","bottomRight","Polygon","key","SettingsModal","printMap","_modal","printPdf","Content","Footer","modal","allowReframeRegionOfInterest","_reframeROI","on","event","print","getElementById","formData","FormData","values","get","extent","regionOfInterest","paperSizes","htmlFor","paperSize","selected","landscape","portrait","d","addNote","rows","checked","layersAttributions","printerMargins","mimeTypeExports","cancel","ProcessingModal","onEndPrint","_message","_loaderContainer","printing","loader","_setContentModal","string","_setFooterModal","set","setLoading","bool","UnitsSystem","pleaseWait","downloadFinished","downloadingImages","close","current","deepObjectAssign","sources","keys","s_val","t_val","PdfPrinter","Control","opt_options","controlElement","showControlBtn","language","Metric","ctrlBtnClass","defaultOptions","showPrintSettingsModal","setMap","_initialized","_init","_initialConstrainRes","getConstrainResolution","getMap","_mapTarget","_settingsModal","_printMap","_processingModal","_onEndPrint","_restoreConstrains","setSize","_initialSize","setResolution","_initialViewResolution","setCenter","_initialViewCoords","_updateDPI","_removeListeners","clearTimeout","_timeoutProcessing","_cancel","_prepareLoading","_disableLoading","pixelRatio","pixelRatio_","tilePixelRatio_","refresh","VectorLayer","Cluster","changed","updateSize","showLoading","delay","_isCanceled","_addDownloadCountListener","dim","find","widthPaper","heightPaper","opt_round","view","getUnits","METERS_PER_UNIT","getMapScale","_renderCompleteKey","mapCanvas","mapContext","prototype","call","querySelectorAll","opacity","globalAlpha","matrix","transform","match","CanvasRenderingContext2D","setTransform","apply","fit","nearest","increaseCount","_imageCount","_eventsKey","unByKey","hidePrintSettingsModal","createPdf","p","utils"],"mappings":"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","x_google_ignoreList":[4]}